<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta name="viewport" content="width=device-width, height=device-height, initial-scale=1, maximum-scale=1" />
<title>SVG Cavern Fighter 2.03, FFOS version, by Marek Raida, sounds taken from http://www.freesound.org/</title>
<script type="text/javascript"><![CDATA[
/*! Hammer.JS - v1.0.5 - 2013-04-07
 * http://eightmedia.github.com/hammer.js
 *
 * Copyright (c) 2013 Jorik Tangelder <j.tangelder@gmail.com>;
 * Licensed under the MIT license */

(function(t,e){"use strict";function n(){if(!i.READY){i.event.determineEventTypes();for(var t in i.gestures)i.gestures.hasOwnProperty(t)&&i.detection.register(i.gestures[t]);i.event.onTouch(i.DOCUMENT,i.EVENT_MOVE,i.detection.detect),i.event.onTouch(i.DOCUMENT,i.EVENT_END,i.detection.detect),i.READY=!0}}var i=function(t,e){return new i.Instance(t,e||{})};i.defaults={stop_browser_behavior:{userSelect:"none",touchAction:"none",touchCallout:"none",contentZooming:"none",userDrag:"none",tapHighlightColor:"rgba(0,0,0,0)"}},i.HAS_POINTEREVENTS=navigator.pointerEnabled||navigator.msPointerEnabled,i.HAS_TOUCHEVENTS="ontouchstart"in t,i.MOBILE_REGEX=/mobile|tablet|ip(ad|hone|od)|android/i,i.NO_MOUSEEVENTS=i.HAS_TOUCHEVENTS&&navigator.userAgent.match(i.MOBILE_REGEX),i.EVENT_TYPES={},i.DIRECTION_DOWN="down",i.DIRECTION_LEFT="left",i.DIRECTION_UP="up",i.DIRECTION_RIGHT="right",i.POINTER_MOUSE="mouse",i.POINTER_TOUCH="touch",i.POINTER_PEN="pen",i.EVENT_START="start",i.EVENT_MOVE="move",i.EVENT_END="end",i.DOCUMENT=document,i.plugins={},i.READY=!1,i.Instance=function(t,e){var r=this;return n(),this.element=t,this.enabled=!0,this.options=i.utils.extend(i.utils.extend({},i.defaults),e||{}),this.options.stop_browser_behavior&&i.utils.stopDefaultBrowserBehavior(this.element,this.options.stop_browser_behavior),i.event.onTouch(t,i.EVENT_START,function(t){r.enabled&&i.detection.startDetect(r,t)}),this},i.Instance.prototype={on:function(t,e){for(var n=t.split(" "),i=0;n.length>i;i++)this.element.addEventListener(n[i],e,!1);return this},off:function(t,e){for(var n=t.split(" "),i=0;n.length>i;i++)this.element.removeEventListener(n[i],e,!1);return this},trigger:function(t,e){var n=i.DOCUMENT.createEvent("Event");n.initEvent(t,!0,!0),n.gesture=e;var r=this.element;return i.utils.hasParent(e.target,r)&&(r=e.target),r.dispatchEvent(n),this},enable:function(t){return this.enabled=t,this}};var r=null,o=!1,s=!1;i.event={bindDom:function(t,e,n){for(var i=e.split(" "),r=0;i.length>r;r++)t.addEventListener(i[r],n,!1)},onTouch:function(t,e,n){var a=this;this.bindDom(t,i.EVENT_TYPES[e],function(c){var u=c.type.toLowerCase();if(!u.match(/mouse/)||!s){(u.match(/touch/)||u.match(/pointerdown/)||u.match(/mouse/)&&1===c.which)&&(o=!0),u.match(/touch|pointer/)&&(s=!0);var h=0;o&&(i.HAS_POINTEREVENTS&&e!=i.EVENT_END?h=i.PointerEvent.updatePointer(e,c):u.match(/touch/)?h=c.touches.length:s||(h=u.match(/up/)?0:1),h>0&&e==i.EVENT_END?e=i.EVENT_MOVE:h||(e=i.EVENT_END),h||null===r?r=c:c=r,n.call(i.detection,a.collectEventData(t,e,c)),i.HAS_POINTEREVENTS&&e==i.EVENT_END&&(h=i.PointerEvent.updatePointer(e,c))),h||(r=null,o=!1,s=!1,i.PointerEvent.reset())}})},determineEventTypes:function(){var t;t=i.HAS_POINTEREVENTS?i.PointerEvent.getEvents():i.NO_MOUSEEVENTS?["touchstart","touchmove","touchend touchcancel"]:["touchstart mousedown","touchmove mousemove","touchend touchcancel mouseup"],i.EVENT_TYPES[i.EVENT_START]=t[0],i.EVENT_TYPES[i.EVENT_MOVE]=t[1],i.EVENT_TYPES[i.EVENT_END]=t[2]},getTouchList:function(t){return i.HAS_POINTEREVENTS?i.PointerEvent.getTouchList():t.touches?t.touches:[{identifier:1,pageX:t.pageX,pageY:t.pageY,target:t.target}]},collectEventData:function(t,e,n){var r=this.getTouchList(n,e),o=i.POINTER_TOUCH;return(n.type.match(/mouse/)||i.PointerEvent.matchType(i.POINTER_MOUSE,n))&&(o=i.POINTER_MOUSE),{center:i.utils.getCenter(r),timeStamp:(new Date).getTime(),target:n.target,touches:r,eventType:e,pointerType:o,srcEvent:n,preventDefault:function(){this.srcEvent.preventManipulation&&this.srcEvent.preventManipulation(),this.srcEvent.preventDefault&&this.srcEvent.preventDefault()},stopPropagation:function(){this.srcEvent.stopPropagation()},stopDetect:function(){return i.detection.stopDetect()}}}},i.PointerEvent={pointers:{},getTouchList:function(){var t=this,e=[];return Object.keys(t.pointers).sort().forEach(function(n){e.push(t.pointers[n])}),e},updatePointer:function(t,e){return t==i.EVENT_END?this.pointers={}:(e.identifier=e.pointerId,this.pointers[e.pointerId]=e),Object.keys(this.pointers).length},matchType:function(t,e){if(!e.pointerType)return!1;var n={};return n[i.POINTER_MOUSE]=e.pointerType==e.MSPOINTER_TYPE_MOUSE||e.pointerType==i.POINTER_MOUSE,n[i.POINTER_TOUCH]=e.pointerType==e.MSPOINTER_TYPE_TOUCH||e.pointerType==i.POINTER_TOUCH,n[i.POINTER_PEN]=e.pointerType==e.MSPOINTER_TYPE_PEN||e.pointerType==i.POINTER_PEN,n[t]},getEvents:function(){return["pointerdown MSPointerDown","pointermove MSPointerMove","pointerup pointercancel MSPointerUp MSPointerCancel"]},reset:function(){this.pointers={}}},i.utils={extend:function(t,n,i){for(var r in n)t[r]!==e&&i||(t[r]=n[r]);return t},hasParent:function(t,e){for(;t;){if(t==e)return!0;t=t.parentNode}return!1},getCenter:function(t){for(var e=[],n=[],i=0,r=t.length;r>i;i++)e.push(t[i].pageX),n.push(t[i].pageY);return{pageX:(Math.min.apply(Math,e)+Math.max.apply(Math,e))/2,pageY:(Math.min.apply(Math,n)+Math.max.apply(Math,n))/2}},getVelocity:function(t,e,n){return{x:Math.abs(e/t)||0,y:Math.abs(n/t)||0}},getAngle:function(t,e){var n=e.pageY-t.pageY,i=e.pageX-t.pageX;return 180*Math.atan2(n,i)/Math.PI},getDirection:function(t,e){var n=Math.abs(t.pageX-e.pageX),r=Math.abs(t.pageY-e.pageY);return n>=r?t.pageX-e.pageX>0?i.DIRECTION_LEFT:i.DIRECTION_RIGHT:t.pageY-e.pageY>0?i.DIRECTION_UP:i.DIRECTION_DOWN},getDistance:function(t,e){var n=e.pageX-t.pageX,i=e.pageY-t.pageY;return Math.sqrt(n*n+i*i)},getScale:function(t,e){return t.length>=2&&e.length>=2?this.getDistance(e[0],e[1])/this.getDistance(t[0],t[1]):1},getRotation:function(t,e){return t.length>=2&&e.length>=2?this.getAngle(e[1],e[0])-this.getAngle(t[1],t[0]):0},isVertical:function(t){return t==i.DIRECTION_UP||t==i.DIRECTION_DOWN},stopDefaultBrowserBehavior:function(t,e){var n,i=["webkit","khtml","moz","ms","o",""];if(e&&t.style){for(var r=0;i.length>r;r++)for(var o in e)e.hasOwnProperty(o)&&(n=o,i[r]&&(n=i[r]+n.substring(0,1).toUpperCase()+n.substring(1)),t.style[n]=e[o]);"none"==e.userSelect&&(t.onselectstart=function(){return!1})}}},i.detection={gestures:[],current:null,previous:null,stopped:!1,startDetect:function(t,e){this.current||(this.stopped=!1,this.current={inst:t,startEvent:i.utils.extend({},e),lastEvent:!1,name:""},this.detect(e))},detect:function(t){if(this.current&&!this.stopped){t=this.extendEventData(t);for(var e=this.current.inst.options,n=0,r=this.gestures.length;r>n;n++){var o=this.gestures[n];if(!this.stopped&&e[o.name]!==!1&&o.handler.call(o,t,this.current.inst)===!1){this.stopDetect();break}}return this.current&&(this.current.lastEvent=t),t.eventType==i.EVENT_END&&!t.touches.length-1&&this.stopDetect(),t}},stopDetect:function(){this.previous=i.utils.extend({},this.current),this.current=null,this.stopped=!0},extendEventData:function(t){var e=this.current.startEvent;if(e&&(t.touches.length!=e.touches.length||t.touches===e.touches)){e.touches=[];for(var n=0,r=t.touches.length;r>n;n++)e.touches.push(i.utils.extend({},t.touches[n]))}var o=t.timeStamp-e.timeStamp,s=t.center.pageX-e.center.pageX,a=t.center.pageY-e.center.pageY,c=i.utils.getVelocity(o,s,a);return i.utils.extend(t,{deltaTime:o,deltaX:s,deltaY:a,velocityX:c.x,velocityY:c.y,distance:i.utils.getDistance(e.center,t.center),angle:i.utils.getAngle(e.center,t.center),direction:i.utils.getDirection(e.center,t.center),scale:i.utils.getScale(e.touches,t.touches),rotation:i.utils.getRotation(e.touches,t.touches),startEvent:e}),t},register:function(t){var n=t.defaults||{};return n[t.name]===e&&(n[t.name]=!0),i.utils.extend(i.defaults,n,!0),t.index=t.index||1e3,this.gestures.push(t),this.gestures.sort(function(t,e){return t.index<e.index?-1:t.index>e.index?1:0}),this.gestures}},i.gestures=i.gestures||{},i.gestures.Hold={name:"hold",index:10,defaults:{hold_timeout:500,hold_threshold:1},timer:null,handler:function(t,e){switch(t.eventType){case i.EVENT_START:clearTimeout(this.timer),i.detection.current.name=this.name,this.timer=setTimeout(function(){"hold"==i.detection.current.name&&e.trigger("hold",t)},e.options.hold_timeout);break;case i.EVENT_MOVE:t.distance>e.options.hold_threshold&&clearTimeout(this.timer);break;case i.EVENT_END:clearTimeout(this.timer)}}},i.gestures.Tap={name:"tap",index:100,defaults:{tap_max_touchtime:250,tap_max_distance:10,tap_always:!0,doubletap_distance:20,doubletap_interval:300},handler:function(t,e){if(t.eventType==i.EVENT_END){var n=i.detection.previous,r=!1;if(t.deltaTime>e.options.tap_max_touchtime||t.distance>e.options.tap_max_distance)return;n&&"tap"==n.name&&t.timeStamp-n.lastEvent.timeStamp<e.options.doubletap_interval&&t.distance<e.options.doubletap_distance&&(e.trigger("doubletap",t),r=!0),(!r||e.options.tap_always)&&(i.detection.current.name="tap",e.trigger(i.detection.current.name,t))}}},i.gestures.Swipe={name:"swipe",index:40,defaults:{swipe_max_touches:1,swipe_velocity:.7},handler:function(t,e){if(t.eventType==i.EVENT_END){if(e.options.swipe_max_touches>0&&t.touches.length>e.options.swipe_max_touches)return;(t.velocityX>e.options.swipe_velocity||t.velocityY>e.options.swipe_velocity)&&(e.trigger(this.name,t),e.trigger(this.name+t.direction,t))}}},i.gestures.Drag={name:"drag",index:50,defaults:{drag_min_distance:10,drag_max_touches:1,drag_block_horizontal:!1,drag_block_vertical:!1,drag_lock_to_axis:!1,drag_lock_min_distance:25},triggered:!1,handler:function(t,n){if(i.detection.current.name!=this.name&&this.triggered)return n.trigger(this.name+"end",t),this.triggered=!1,e;if(!(n.options.drag_max_touches>0&&t.touches.length>n.options.drag_max_touches))switch(t.eventType){case i.EVENT_START:this.triggered=!1;break;case i.EVENT_MOVE:if(t.distance<n.options.drag_min_distance&&i.detection.current.name!=this.name)return;i.detection.current.name=this.name,(i.detection.current.lastEvent.drag_locked_to_axis||n.options.drag_lock_to_axis&&n.options.drag_lock_min_distance<=t.distance)&&(t.drag_locked_to_axis=!0);var r=i.detection.current.lastEvent.direction;t.drag_locked_to_axis&&r!==t.direction&&(t.direction=i.utils.isVertical(r)?0>t.deltaY?i.DIRECTION_UP:i.DIRECTION_DOWN:0>t.deltaX?i.DIRECTION_LEFT:i.DIRECTION_RIGHT),this.triggered||(n.trigger(this.name+"start",t),this.triggered=!0),n.trigger(this.name,t),n.trigger(this.name+t.direction,t),(n.options.drag_block_vertical&&i.utils.isVertical(t.direction)||n.options.drag_block_horizontal&&!i.utils.isVertical(t.direction))&&t.preventDefault();break;case i.EVENT_END:this.triggered&&n.trigger(this.name+"end",t),this.triggered=!1}}},i.gestures.Transform={name:"transform",index:45,defaults:{transform_min_scale:.01,transform_min_rotation:1,transform_always_block:!1},triggered:!1,handler:function(t,n){if(i.detection.current.name!=this.name&&this.triggered)return n.trigger(this.name+"end",t),this.triggered=!1,e;if(!(2>t.touches.length))switch(n.options.transform_always_block&&t.preventDefault(),t.eventType){case i.EVENT_START:this.triggered=!1;break;case i.EVENT_MOVE:var r=Math.abs(1-t.scale),o=Math.abs(t.rotation);if(n.options.transform_min_scale>r&&n.options.transform_min_rotation>o)return;i.detection.current.name=this.name,this.triggered||(n.trigger(this.name+"start",t),this.triggered=!0),n.trigger(this.name,t),o>n.options.transform_min_rotation&&n.trigger("rotate",t),r>n.options.transform_min_scale&&(n.trigger("pinch",t),n.trigger("pinch"+(1>t.scale?"in":"out"),t));break;case i.EVENT_END:this.triggered&&n.trigger(this.name+"end",t),this.triggered=!1}}},i.gestures.Touch={name:"touch",index:-1/0,defaults:{prevent_default:!1,prevent_mouseevents:!1},handler:function(t,n){return n.options.prevent_mouseevents&&t.pointerType==i.POINTER_MOUSE?(t.stopDetect(),e):(n.options.prevent_default&&t.preventDefault(),t.eventType==i.EVENT_START&&n.trigger(this.name,t),e)}},i.gestures.Release={name:"release",index:1/0,handler:function(t,e){t.eventType==i.EVENT_END&&e.trigger(this.name,t)}},"object"==typeof module&&"object"==typeof module.exports?module.exports=i:(t.Hammer=i,"function"==typeof t.define&&t.define.amd&&t.define("hammer",[],function(){return i}))})(this);
]]></script>
</head>
<body style="margin:0;padding:0;background-color:black">
  <audio id="a_missile" src="data:audio/ogg;base64,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"></audio>
  <audio id="a_enemy" src="data:audio/ogg;base64,T2dnUwACAAAAAAAAAACGQgAAAAAAAGDJC0ABHgF2b3JiaXMAAAAAAYA+AAD/////AH0AAP////+pAU9nZ1MAAAAAAAAAAAAAhkIAAAEAAABB7n9GDkn////////////////FA3ZvcmJpczkAAABCUzsgTGFuY2VyKFNTRSkgWzIwMDYxMTEwXSAoYmFzZWQgb24gYW9UdVYgYjUgWzIwMDYxMDI0XSkAAAAAAQV2b3JiaXMiQkNWAQBAAAAYQhAqBa1jjjrIFSGMGaKgQsopxx1C0CGjJEOIOsY1xxhjR7lkikLJgdCQVQAAQAAApBxXUHJJLeecc6MYV8xx6CDnnHPlIGfMcQkl55xzjjnnknKOMeecc6MYVw5yKS3nnHOBFEeKcacY55xzpBxHinGoGOecc20xt5JyzjnnnHPmIIdScq4155xzpBhnDnILJeecc8YgZ8xx6yDnnHOMNbfUcs4555xzzjnnnHPOOeecc4wx55xzzjnnnHNuMecWc64555xzzjnnHHPOOeeccyA0ZBUAkAAAoKEoiuIoDhAasgoAyAAAEEBxFEeRFEuxHMvRJA0IDVkFAAABAAgAAKBIhqRIiqVYjmZpniZ6oiiaoiqrsmnKsizLsuu6LhAasgoASAAAUFEUxXAUBwgNWQUAZAAACGAoiqM4juRYkqVZngeEhqwCAIAAAAQAAFAMR7EUTfEkz/I8z/M8z/M8z/M8z/M8z/M8z/M8DQgNWQUAIAAAAIIoZBgDQkNWAQBAAAAIIRoZQ51SElwKFkIcEUMdQs5DqaWD4CmFJWPSU6xBCCF87z333nvvgdCQVQAAEAAAYRQ4iIHHJAghhGIUJ0RxpiAIIYTlJFjKeegkCN2DEEK4nHvLuffeeyA0ZBUAAAgAwCCEEEIIIYQQQggppJRSSCmmmGKKKcccc8wxxyCDDDLooJNOOsmkkk46yiSjjlJrKbUUU0yx5RZjrbXWnHOvQSljjDHGGGOMMcYYY4wxxhgjCA1ZBQCAAAAQBhlkkEEIIYQUUkgppphyzDHHHANCQ1YBAIAAAAIAAAAcRVIkR3IkR5IkyZIsSZM8y7M8y7M8TdRETRVV1VVt1/ZtX/Zt39Vl3/Zl29VlXZZl3bVtXdZdXdd1Xdd1Xdd1Xdd1Xdd1XdeB0JBVAIAEAICO5DiO5DiO5EiOpEgKEBqyCgCQAQAQAICjOIrjSI7kWI4lWZImaZZneZaneZqoiR4QGrIKAAAEABAAAAAAAICiKIqjOI4kWZamaZ6neqIomqqqiqapqqpqmqZpmqZpmqZpmqZpmqZpmqZpmqZpmqZpmqZpmqZpmqZpAqEhqwAACQAAHcdxHEdxHMdxJEeSJCA0ZBUAIAMAIAAAQ1EcRXIsx5I0S7M8y9NEz/RcUTZ1U1dtIDRkFQAACAAgAAAAAAAAx3M8x3M8yZM8y3M8x5M8SdM0TdM0TdM0TdM0TdM0TdM0TdM0TdM0TdM0TdM0TdM0TdM0TdM0TdM0TQNCQ1YCAGQAABCTkEpOsVdGKcYktF4qpBST1HuomGJMOu2pQgYpB7mHSiGloNPeMqWQUgx7p5hCyBjqoYOQMYWw19pzz733HggNWREARAEAAMYgxhBjyDEmJYMSMcckZFIi55yUTkompaRWWsykhJhKi5FzTkonJZNSWgupZZJKayWmAgAAAhwAAAIshEJDVgQAUQAAiDFIKaQUUkoxp5hDSinHlGNIKeWcck45x5h0ECrnGHQOSqSUco45p5xzEjIHlXMOQiadAACAAAcAgAALodCQFQFAnAAAgJBzijEIEWMQQgkphVBSqpyT0kFJqYOSUkmpxZJSjJVzUjoJKXUSUiopxVhSii2kVGNpLdfSUo0txpxbjL2GlGItqdVaWqu5xVhzizX3yDlKnZTWOimtpdZqTa3V2klpLaTWYmktxtZizSnGnDMprYWWYiupxdhiyzW1mHNpLdcUY88pxp5rrLnHnIMwrdWcWss5xZh7zLHnmHMPknOUOimtdVJaS63VmlqrNZPSWmmtxpBaiy3GnFuLMWdSWiypxVhaijHFmHOLLdfQWq4pxpxTiznHWoOSsfZeWqs5xZh7iq3nmHMwNseeO0q5ltZ6Lq31XnMuQtbci2gt59RqDyrGnnPOwdjcgxCt5Zxq7D3F2HvuORjbc/Ct1uBbzUXInIPQufimezBG1dqDzLUImXMQOugidPDJeJRqLq3lXFrrPdYafM05CNFa7inG3lOLvdeem7C9ByFayz3F2IOKMfiaczA652JUrcHHnIOQtRahey9K5yCUqrUHmWtQMtcidPDF6KCLLwAAYMABACDAhDJQaMiKACBOAIBByDmlGIRKKQihhJRCKClVjEnImIOSMSellFJaCCW1ijEImWNSMsekhBJaKiW0EkppqZTSWiiltZZajCm1FkMpqYVSWiultJZaqjG1VmPEmJTMOSmZY1JKKa2VUlqrHJOSMSipg5BKKSnFUlKLlXNSMuiodBBKKqnEVFJpraTSUimlxZJSbCnFVFuLtYZSWiypxFZSajG1VFuLMdeIMSkZc1Iy56SUUlIrpbSWOSelg45K5qCkklJrpaQUM+akdA5KyiCjUlKKLaUSUyiltZJSbKWk1lqMtabUWi0ltVZSarGUEluLMdcWS02dlNZKKjGGUlprMeaaWosxlBJbKSnGkkpsrcWaW2w5hlJaLKnEVkpqsdWWY2ux5tRSjSm1mltsucaUU4+19pxaqzW1VGNrseZYW2+11pw7Ka2FUlorJcWYWouxxVhzKCW2klJspaQYW2y5thZjD6G0WEpqsaQSY2sx5hhbjqm1WltsuabUYq219hxbbj2lFmuLsebSUo01195jTTkVAAAw4AAAEGBCGSg0ZCUAEAUAABjDGGMQGqWcc05Kg5RzzknJnIMQQkqZcxBCSClzTkJKLWXOQUiptVBKSq3FFkpJqbUWCwAAKHAAAAiwQVNicYBCQ1YCAFEAAIgxSjEGoTFGKecgNMYoxRiESinGnJNQKcWYc1Ayx5yDUErmnHMQSgkhlFJKSiGEUkpJqQAAgAIHAIAAGzQlFgcoNGRFABAFAAAYY5wzziEKnaXOUiSpo9ZRayilGkuMncZWe+u50xp7bbk3lEqNqdaOa8u51d5pTT23HAsAADtwAAA7sBAKDVkJAOQBABDGKMWYc84ZhRhzzjnnDFKMOeecc4ox55yDEELFmHPOQQghc845CKGEkjnnHIQQSuicg1BKKaV0zkEIoZRSOucghFJKKZ1zEEoppZQCAIAKHAAAAmwU2ZxgJKjQkJUAQB4AAGAMQs5Jaa1hzDkILdXYMMYclJRii5yDkFKLuUbMQUgpxqA7KCm1GGzwnYSUWos5B5NSizXn3oNIqbWag8491VZzz733nGKsNefecy8AAHfBAQDswEaRzQlGggoNWQkA5AEAEAgpxZhzzhmlGHPMOeeMUowx5pxzijHGnHPOQcUYY845ByFjzDnnIISQMeaccxBC6JxzDkIIIXTOOQchhBA656CDEEIInXMQQgghhAIAgAocAAACbBTZnGAkqNCQlQBAOAAAACGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC6JxzzjnnnHPOOeecc84555xzzjknAMi3wgHA/8HGGVaSzgpHgwsNWQkAhAMAAApBKKViEEopJZJOOimdk1BKKZGDUkrppJRSSgmllFJKCKWUUkoIHZRSQimllFJKKaWUUkoppZRSOimllFJKKaWUyjkppZNSSimlRM5JKSGUUkoppYRSSimllFJKKaWUUkoppZRSSimlhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEAgC4GxwAIBJsnGEl6axwNLjQkJUAQEgAAKAUc45KCCmUkFKomKKOQikppFJKChFjzknqHIVQUiipg8o5CKWklEIqIXXOQQclhZBSCSGVjjroKJRQUiollNI5KKWEFEpKKZWQQkipdJRSKCWVlEIqIZVSSkgllRBKCp2kVEoKqaRUUgiddJBCJyWkkkoKqZOUUiolpZRKSiV0UkIqKaUQQkqplBBKSCmlTlJJqaQUQighhZRSSiWlkkpKIZVUQgmlpJRSKKGkVFJKKaWSUikAAODAAQAgwAg6yaiyCBtNuPAAFBqyEgAgAwBAlHTWaadJIggxRZknDSnGILWkLMMQU5KJ8RRjjDkoRkMOMeSUGBdKCKGDYjwmlUPKUFG5t9Q5BcUWY3zvsRcBAAAIAgAEhAQAGCAomAEABgcIIwcCHQEEDm0AgIEImQkMCqHBQSYAPEBESAUAiQmK0oUuCCGCdBFk8cCFEzeeuOGEDm0QAAAAAAAQAPABAJBQABER0cxVWFxgZGhscHR4fICEBAAAAAAACAB8AAAkIkBERDRzFRYXGBkaGxwdHh8gIQEAAAAAAAAAAEBAQAAAAAAAIAAAAEBAT2dnUwAExCsAAAAAAACGQgAAAgAAAADU+8AYUkx2cXBsa2xucGVramtlYWplY2JtXmoBxF1U0Ljqgn/WPZ85/ao9BHk+s0HpPO3S0WN6u8sqrb5a+06uXnnmNNRZoy0ZVUjzo25MDWDeF4kofFYGqnxcyMiEy7jxE6NO4UTIue7xrkxGBMRbfiEtgJad5fHl534cLseTfBiY+bY4CP/V1q3eaBVD7nnFdBt8Sd9fuw9xFzmbqywNs5mhabeuyr6eNDdXyidswDYz3PPZdysVKADa/S0pUBIA1wFWKraYXPw7Lg86TUnU9OqyiND4z5N/9e+pZbxVsaTHwuaSjvgcrSwQH2hbunjmuqZabEwq7ou1plht0F5aXevf1DXklv0hzKdHurPBZbdOFXk/48z9cFeOAvedhZzW09ozAsfkvjP4hVrtqT0Afq6duTN0BckkOlb00oGqzZgU4dy2X2jaT407Rq9O1vR8l85hedsCot2yJwfzLvHO4wf1YE/dMoEZ90LwGcE0E54mG3MeSEtDhV0LCrrqM+1yK3BfYWm619ewFSvOcaze3e/C8PPaDPWWep/FR4LOJwCejl3hsnZJOJVuykWAahnM2VqcYdx/b45Nu3X7dD4OhXFHwqNBjngRo9YBctLhR4DRflZN8yaNbQvksGqvTZSq/f6ccTpLETf7Kigldx6lBaWIgBab3SqsfdKKESGLIiZUjKldIaxyi9Y3y/eENc0Gfm6dsRMAgMsBRdsxm8mSR39Xx6yWq/0WNk9t5q3jem94qCnuCFMz2rvhPpouOeCwm8+UqyJM3IyMjGWY8b3fzZOKBLAtW5MinGmxSE4yiJ0FNzMo2VbqOGVsq7CeyJcEFQF5dnv1Nk/K3BkDXn5d1VqdYIwcIuwooFiUJKXjn4+L4Diy20Z40o08T36aT+ltF6XO9thZBIVER1MG/I2sXudhSx7cIQJpV21N5wBxtvqkiz4cfYss77k78qIS+62I5BxLC71xSllaZgWxtpXcuRqmf8/mvwC+Xl3BfnQOFJ2LCzxFidmS22xekHTaOriQ3k+CkUwXi1LUFcJlEIvuQyFGdcxOkzcJdokhpVV+OtPJwoobym1/1Dh3bG05ob1Mne2Q8zsFRAl2Ixv/2Uzg2M/R7L2BjyO3batHK9oG3sBZCwCePl3AxzRBrJqjTwcAFdtxScZgszhLrUkkzG+DCtei1c2wfYtGWpoh2LCz164W9iW9qob6btKLGM7odIJyE4V2jkSzCHn4FktObpCPb5YtFX3TDflJ9u2c9sWyCpvFqT92L0K+e3L63jtF29AcAB4eXajt3QYLcOlA0+qcY5qGffJ9nY4k7y7+RpeXanmNr6XSSDfMYJQYOjcMsyl83+2a5Guhxt4dlmwgPkW6c7lIVifrCOcYnK14DWRrEaBfGf6LtMGxLReuYNwVQ2P7E8XHK1/JjGxE12r5CU6J1wD+LV2DUQAALoCi7STpmLDpt+Si3fTRGBk/SmvnllsyTMTVala13UH5vzN8IXvtM8ptBD/sgmP/fkUaV6Bjl+UFSHK2q3mxVri1eYoT60O/VTnk0o+tayW2ujDxWPkeGbkoyzLrAH4dXbjlkbk4CnABVItiTpqno7+N1Xa/YGnz3C19LcL9LZ9pOJF1uVyOy3DdUAwms/TqzUPISffd2tYyYEiItZvuEYoU55Ud7iW7jf2dHlxYtFTGDCFcRnjp3Xrpx94oqMwyS3scWy+I9QIAvu3smF1EmhwgSYcvgIotSbIyemlMR+8Hhytzf25c106xUL9jrMQzoOaIJIqUokEHTzP5S9qoxZuuSrwPSFsw1LN4u0hG2dXak5+0kXxi58zqGVJdKSv0JWId7/W+w7PVlEu1I8rIlm/oAT7O3IB3GnFSCYVXrAlJzNp7MMt9X7tIcYQgpd86rV4CWnaxnhjK/Oh9XtFGjj/P+GoZuXFbXP34t4t7UqivNQ7QX7cmq52t0ie1u0HoWIrJt4uz2jZkrM1leu/0++cB3MH/bOMaJVptqWUFPs3cScsqEmLYQUDRliQ1relh+7r1YToG495ebRZ80cXvXVooovJAd9AeHCjoHhIZyRPw6wmveXiZKjhKRmu6d7rvmqytR7dWfbosCtOZvtpH2UQyuUvXSGEG7VnfWtFWq6+BewDezTzA7mJU4vcAFxah6iQ5xTbrtr2HJqUXYnwuQ1nGQc0i7jXHcBzIK3FKGY4uSwNILWG9Ad0QGqQ1mBLsT5W2syZDTxMsJdFPgEcp5T0QUnoGmi7wsUB1DgWrym0O9e8BvpycsSEQwUoti1wAVcYkuePWYrG8u/Y7MWjJmvuN3js4dPZ53JrgFEAx3kK2asfEArsMWccBmD9bW29CsHwuGGaU3mMMhOk5Q0F7pWl6F8Pi1hH36m3L8NQRZ/euu+X7QnkAEWbrOt86AF6MnMHQmjXszKwUi05ykh2L212/0dqvq0ha/BIk09HSdDstRFQV3JT34nwZaKqqhCPviFJmWpUSiJAQmis3qQWufVBi/G3zv1ZtLgtevnY+DzM8pqo6nkgp4snBIp2psyxNn0kAfky8lJqaLbBuwQXgseUkhc2Dp0a1XfO5Ob6p6d0TY8wi1bNi34UsEZefI5snVaFiBrufaEJqA1toApWxKoZsIBadED2rybEPETzcZu08Dti6ZfXQRDmy1mSr+Cr0ovDtTA4Afts7YjsG6apeoW0xIckphZ1/jd5n+/mKcEpddw7f66cfFCnXUtW9TdZXDXowQ4sX8Ba2ve8OrmkuL+KgB7AzA/Zf+9IlB1uLEnTX187J8nkeFtAJ07bmBM9ttx2Dy0nbGgAe2zthWwGYr+BSQNFmTlLt/vHEPnxo+T54UZbp7wm1nKngktPoYWm1raY5bZ4mvQwimRdtO6op5XtqezFKxrrqbmGaeW7trKD5hckYJeQLIYHH5GoZVaKn/r/vK5USa4XTenkxY+O2HPQ+gQ4Anno7gR9IYBqxUnSSJM06f/H1/cpZ5PGNxS7j+jk2sTyyrCZ6Go44gNTilTZc7wdpPhnU1IvUxatg3OX3hYPN3LjQutYd67DZMlh5vwbeOXlkWRkNd85kDjybYIkGAL76+h8auVqF8pSqaOspMicnAM//GyxPwv1TtDwJ8xSeWbjhL++28CIff2rybPc9MLBskTiPcsOCrdOUdMWuD4Ap8nNz4s+AaflmuwYASN257CH7NWsLZt+Y+A24sm9iHwD8PBO/YL24LAAO"></audio>
  <audio id="a_bonus" src="data:audio/ogg;base64,"></audio>
  <audio id="a_crash" src="data:audio/ogg;base64,"></audio>
  <audio id="a_alarm2" src="data:audio/ogg;base64,"></audio>
  <audio id="a_alarm" src="data:audio/ogg;base64,"></audio>
  <audio id="a_forceshield" src="data:audio/ogg;base64,"></audio>
  <audio id="a_bomb" src="data:audio/ogg;base64,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"></audio>
  <audio id="a_points" src="data:audio/ogg;base64,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"></audio>
  <audio id="a_positiveShot" src="data:audio/ogg;base64,"></audio>
  <audio id="a_nothing" src="data:audio/ogg;base64,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"></audio>
  <audio id="a_crash2" src="data:audio/ogg;base64,"></audio>
  <audio id="a_positiveSound" src="data:audio/ogg;base64,"></audio>
  <audio id="a_level" src="data:audio/ogg;base64,"></audio>
  <audio id="a_crash3" src="data:audio/ogg;base64,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"></audio>
  <audio id="a_crash4" src="data:audio/ogg;base64,"></audio>
  <audio id="a_thrust" src="data:audio/ogg;base64,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"></audio>
  <audio id="a_gong" src="data:audio/ogg;base64,"></audio>
  <audio id="a_timeshift" src="data:audio/ogg;base64,"></audio>
  <audio id="a_music" src="data:audio/ogg;base64,
"></audio>


<svg:svg font-family="Helvetica, sans-serif" width="480" height="320" stroke="none" stroke-width="0" style="overflow:hidden;border:none;border-image-width:0">
  <svg:title>SVG Cavern Fighter</svg:title>
  <svg:desc>by Marek Raida, marek.raida@gmail.com</svg:desc>

  <svg:defs>

    <svg:linearGradient id="ceiling" x1="0" y1="0" x2="0" y2="160" gradientUnits="userSpaceOnUse">
      <svg:stop offset="0%" stop-color="lightblue" id="ceilOffset1"/>
      <svg:stop offset="100%" stop-color="navy" id="ceilOffset2"/>
    </svg:linearGradient> 
    <svg:linearGradient id="floor" x1="0" y1="160" x2="0" y2="320" gradientUnits="userSpaceOnUse">
      <svg:stop offset="0%" stop-color="navy" id="floorOffset1"/>
      <svg:stop offset="100%" stop-color="lightblue" id="floorOffset2"/>
    </svg:linearGradient>
    <svg:linearGradient id="shieldGradient" x1="0" y1="0" x2="130" y2="0" gradientUnits="userSpaceOnUse">
      <svg:stop offset="0%" stop-color="red"/>
      <svg:stop offset="25%" stop-color="orange"/>
      <svg:stop offset="50%" stop-color="blue"/>
      <svg:stop offset="100%" stop-color="steelblue"/>
    </svg:linearGradient>
    <svg:linearGradient id="fuelGradient" x1="120" y1="0" x2="320" y2="0" gradientUnits="userSpaceOnUse">
      <svg:stop offset="0%" stop-color="red"/>
      <svg:stop offset="25%" stop-color="gold"/>
      <svg:stop offset="50%" stop-color="green"/>
      <svg:stop offset="100%" stop-color="lightgreen"/>
    </svg:linearGradient>
    <svg:linearGradient id="bigTxt" x1="0" y1="0" x2="1" y2="1" gradientUnits="objectBoundingBox">
      <svg:stop offset="0%" stop-color="gold"/>
      <svg:stop offset="100%" stop-color="red"/>
    </svg:linearGradient>

    <svg:circle id="bonusMarker" cx="16" cy="4" r="4" fill="#2f2">
      <svg:animate attributeName="display" values="block; none" calcMode="discrete" repeatCount="indefinite" begin="0s" dur="1s"/>
    </svg:circle>

    <svg:circle id="antiBonusMarker" cx="16" cy="4" r="4" fill="#e00">
      <svg:animate attributeName="display" values="block; none" calcMode="discrete" repeatCount="indefinite" begin="0s" dur="1s"/>
    </svg:circle>

    <svg:g id="halfHourglassBg">
      <svg:polygon fill="#599" points="1,0 10,7 19,0"/>
    </svg:g>
    <svg:g id="halfHourglassSand">
      <svg:polygon fill="yellow" points="2,0 10,6 18,0"/>
    </svg:g>

    <svg:g id="normal">
      <svg:ellipse cx="25" cy="10" rx="5" ry="3" fill="white"/>
      <svg:g fill="gold">
        <svg:polygon points="1,5  8,7 1,9"/>
        <svg:polygon points="1,15  8,13 1,11"/>
        <svg:animate attributeName="fill" values="gold; #222; gold" dur="1s" repeatCount="indefinite" begin="0s"/>
      </svg:g>
      <svg:rect x="20" y="0" width="6" height="2" fill="#4f4" rx="1"/>
      <svg:rect x="20" y="18" width="6" height="2" fill="maroon" rx="1"/>
      <svg:polygon fill="#eee" points="2,0    22,0      22,2    12,2    17,6    27,7      27,10       8,10      8,8       6,8     6,5      8,5       5,2     2,2"/>
      <svg:polygon fill="#aaa" points="2,20  22,20   22,18  12,18 17,14  27,13    27,10       8,10      8,12     6,12    6,15     8,15    5,18   2,18 "/>
      <svg:rect x="18" y="7" width="6" height="2" fill="navy" rx="1"/>
    </svg:g>
    <svg:g id="crash">
      <svg:ellipse cx="25" cy="10" rx="5" ry="3" fill="red"/>
      <svg:rect x="20" y="0" width="6" height="2" fill="red" rx="1"/>
      <svg:rect x="20" y="18" width="6" height="2" fill="red" rx="1"/>
      <svg:polygon fill="red" points="2,0    22,0      22,2    12,2    17,6    27,7      27,10       8,10      8,8       6,8     6,5      8,5       5,2     2,2"/>
      <svg:polygon fill="red" points="2,20  22,20   22,18  12,18 17,14  27,13    27,10       8,10      8,12     6,12    6,15     8,15    5,18   2,18 "/>
      <svg:rect x="18" y="7" width="6" height="2" fill="black" rx="1"/>
    </svg:g>
    <svg:g id="forward">
      <svg:ellipse cx="25" cy="10" rx="5" ry="3" fill="maroon"/>
      <svg:polygon fill="red" points="0,3  8,7 0,10"/>
      <svg:polygon fill="red" points="0,17  8,13 0,10"/>
      <svg:rect x="20" y="0" width="6" height="2" fill="#4f4" rx="1"/>
      <svg:rect x="20" y="18" width="6" height="2" fill="#2f2" rx="1"/>
      <svg:polygon fill="#eee" points="2,0    22,0      22,2    12,2    17,6    27,7      27,10       8,10      8,8       6,8     6,5      8,5       5,2     2,2"/>
      <svg:polygon fill="#aaa" points="2,20  22,20   22,18  12,18 17,14  27,13    27,10       8,10      8,12     6,12    6,15     8,15    5,18   2,18 "/>
      <svg:rect x="18" y="7" width="6" height="2" fill="navy" rx="1"/>
    </svg:g>
    <svg:g id="backward">
      <svg:ellipse cx="25" cy="10" rx="5" ry="3" fill="cyan"/>
      <svg:polygon fill="cyan" points="0,2  8,7 0,10"/>
      <svg:polygon fill="cyan" points="0,18  8,13 0,10"/>
      <svg:rect x="20" y="0" width="6" height="2" fill="#4f4" rx="1"/>
      <svg:rect x="20" y="18" width="6" height="2" fill="#2f2" rx="1"/>
      <svg:polygon fill="#eee" points="2,0    22,0      22,2    12,2    17,6    27,7      27,10       8,10      8,8       6,8     6,5      8,5       5,2     2,2"/>
      <svg:polygon fill="#aaa" points="2,20  22,20   22,18  12,18 17,14  27,13    27,10       8,10      8,12     6,12    6,15     8,15    5,18   2,18 "/>
      <svg:rect x="18" y="7" width="6" height="2" fill="navy" rx="1"/>
    </svg:g>

    <svg:radialGradient id="crashGrad" gradientUnits="objectBoundingBox" cx="55%" cy="55%">
      <svg:stop offset="0" stop-color="white"/>
      <svg:stop offset="35%" stop-color="red"/>
      <svg:stop offset="100%" stop-color="orange"/>
    </svg:radialGradient>

    <svg:g id="crashNegative"><svg:g><svg:text x="-14" y="-4" fill="#e00" font-size="18px" font-weight="normal">shield -10</svg:text>
      <svg:circle cx="10" cy="10" fill="url(#crashGrad)" r="12">
        <svg:animate attributeName="r" values="4; 20; 4" dur="1.6s" repeatCount="indefinite" begin="0s"/>
      </svg:circle>
      <svg:circle cx="11" cy="11" fill="url(#crashGrad)" r="6">
        <svg:animate attributeName="r" values="2; 6; 13; 2" dur="1.6s" repeatCount="indefinite" begin="0.2s"/>
      </svg:circle>
    </svg:g></svg:g>

    <svg:radialGradient id="positiveCrashGrad" gradientUnits="objectBoundingBox" cx="55%" cy="55%">
      <svg:stop offset="0" stop-color="white"/>
      <svg:stop offset="35%" stop-color="yellow"/>
      <svg:stop offset="100%" stop-color="#3f3"/>
    </svg:radialGradient>

    <svg:g id="crashPositive"><svg:g><svg:text x="-14" y="-4" fill="#2f2" font-size="18px" font-weight="normal">fuel +20</svg:text>
      <svg:circle cx="10" cy="10" fill="url(#positiveCrashGrad)" r="12">
        <svg:animate attributeName="r" values="4; 20; 4" dur="1.6s" repeatCount="indefinite" begin="0.2s"/>
      </svg:circle>
      <svg:circle cx="11" cy="11" fill="url(#positiveCrashGrad)" r="6">
        <svg:animate attributeName="r" values="2; 6; 13; 2" dur="1.6s" repeatCount="indefinite" begin="0.2s"/>
      </svg:circle>
    </svg:g></svg:g>

    <!-- problems with FFX use + smil and bolts solved in some, although not optimal way -->
    <svg:g id="bolt1"><svg:g>
      <svg:rect x="0" y="-130" width="20" height="150" fill="#666" rx="3"/>
      <svg:g fill="steelblue">
        <svg:rect x="10" y="-125" width="7" height="140" rx="4"/>
        <svg:rect x="3" y="-120" width="3" height="130" rx="2"/>
        <!--svg:animate attributeName="fill" values="#666; steelblue; steelblue; #666" dur="2.5s" repeatCount="indefinite" begin="0s"/>
        <svg:animateTransform attributeName="transform" type="scale" values="1 1; .4 1; 1 1; 1 1" dur="4s" repeatCount="indefinite" begin="0s"/-->
      </svg:g>
    </svg:g></svg:g>

    <svg:g id="bolt2"><svg:g>
      <svg:rect x="0" y="0" width="20" height="150" fill="darkgray" rx="3"/>
      <svg:g fill="gray">
        <svg:rect x="3" y="5" width="7" height="140" rx="4"/>
        <svg:rect x="12" y="10" width="3" height="130" rx="2"/>
        <!--svg:animate attributeName="fill" values="darkgray; steelblue; steelblue; darkgray" dur="2s" repeatCount="indefinite" begin="0s"/>
        <svg:animateTransform attributeName="transform" type="scale" values="1 1; .4 1; 1 1; 1 1" dur="4.5s" repeatCount="indefinite" begin="0s"/-->
      </svg:g>
    </svg:g></svg:g>

    <svg:g id="noForceShieldVisual"/>

    <svg:g id="forceShieldVisual">
      <svg:rect width="36" height="28" x="-3" y="-4" rx="12" fill="cyan">
        <!--svg:animate attributeName="fill" values="navy; cyan; navy" dur="0.7s" repeatCount="indefinite" begin="0s"/-->
      </svg:rect>
      <svg:rect width="30" height="22" x="0" y="-1" rx="12" fill="navy"/>
    </svg:g>

    <svg:polygon id="finishFlag" fill="#eee" points="20,0 0 0 0,20 20,20 20,40 0,40 0,60 20,60 20,80 0,80 0,100 20,100 20,120 0,120 0,140 20,140  20,100 40,100 40,120 20,120 20,80 40,80 40,60 20,60 20,40 40,40 40,20, 20,20"/>

  </svg:defs>

  <svg:rect x="0" y="0" width="100%" height="100%" fill="black"/>

  <svg:g id="fires"/>

  <svg:g id="cave" transform="translate(-552 0)">
    <svg:g id="bcgDecors"/>
    <svg:g id="finishLine" display="inherit" transform="translate(480, 82)">
        <svg:use xlink:href="#finishFlag" x="-90" y="0"/>
        <svg:use xlink:href="#finishFlag" x="-50" y="0"/>
    </svg:g>
    <svg:g id="environment"><svg:rect x="0" y="0" width="22" height="200" visibility="hidden" fill="none"/><svg:rect x="0" y="309" width="22" height="181" visibility="hidden" fill="none"/><svg:rect x="22" y="0" width="22" height="200" visibility="hidden" fill="none"/><svg:rect x="22" y="334" width="22" height="156" visibility="hidden" fill="none"/><svg:rect x="44" y="0" width="22" height="200" visibility="hidden" fill="none"/><svg:rect x="44" y="312" width="22" height="178" visibility="hidden" fill="none"/><svg:rect x="66" y="0" width="22" height="200" visibility="hidden" fill="none"/><svg:rect x="66" y="327" width="22" height="163" visibility="hidden" fill="none"/><svg:rect x="88" y="0" width="22" height="200" visibility="hidden" fill="none"/><svg:rect x="88" y="338" width="22" height="152" visibility="hidden" fill="none"/><svg:rect x="110" y="0" width="22" height="200" visibility="hidden" fill="none"/><svg:rect x="110" y="332" width="22" height="158" visibility="hidden" fill="none"/><svg:rect x="132" y="0" width="22" height="200" visibility="hidden" fill="none"/><svg:rect x="132" y="336" width="22" height="154" visibility="hidden" fill="none"/><svg:rect x="154" y="0" width="22" height="200" visibility="hidden" fill="none"/><svg:rect x="154" y="335" width="22" height="155" visibility="hidden" fill="none"/><svg:rect x="176" y="0" width="22" height="200" visibility="hidden" fill="none"/><svg:rect x="176" y="331" width="22" height="159" visibility="hidden" fill="none"/><svg:rect x="198" y="0" width="22" height="200" visibility="hidden" fill="none"/><svg:rect x="198" y="311" width="22" height="179" visibility="hidden" fill="none"/><svg:rect x="220" y="0" width="22" height="200" visibility="hidden" fill="none"/><svg:rect x="220" y="318" width="22" height="172" visibility="hidden" fill="none"/><svg:rect x="242" y="0" width="22" height="174" visibility="hidden" fill="none"/><svg:rect x="242" y="308" width="22" height="182" visibility="hidden" fill="none"/><svg:rect x="264" y="0" width="22" height="158" visibility="hidden" fill="none"/><svg:rect x="264" y="282" width="22" height="208" visibility="hidden" fill="none"/><svg:rect x="286" y="0" width="22" height="130" visibility="hidden" fill="none"/><svg:rect x="286" y="266" width="22" height="224" visibility="hidden" fill="none"/><svg:rect x="308" y="0" width="22" height="118" visibility="hidden" fill="none"/><svg:rect x="308" y="238" width="22" height="252" visibility="hidden" fill="none"/><svg:rect x="330" y="0" width="22" height="144" visibility="hidden" fill="none"/><svg:rect x="330" y="278" width="22" height="212" visibility="hidden" fill="none"/><svg:rect x="352" y="0" width="22" height="170" visibility="hidden" fill="none"/><svg:rect x="352" y="304" width="22" height="186" visibility="hidden" fill="none"/><svg:rect x="374" y="0" width="22" height="176" visibility="hidden" fill="none"/><svg:rect x="374" y="290" width="22" height="200" visibility="hidden" fill="none"/><svg:rect x="396" y="0" width="22" height="173" visibility="hidden" fill="none"/><svg:rect x="396" y="284" width="22" height="206" visibility="hidden" fill="none"/><svg:rect x="418" y="0" width="22" height="154" visibility="hidden" fill="none"/><svg:rect x="418" y="281" width="22" height="209" visibility="hidden" fill="none"/><svg:rect x="440" y="0" width="22" height="127" visibility="hidden" fill="none"/><svg:rect x="440" y="262" width="22" height="228" visibility="hidden" fill="none"/><svg:rect x="462" y="0" width="22" height="101" visibility="hidden" fill="none"/><svg:rect x="462" y="235" width="22" height="255" visibility="hidden" fill="none"/><svg:rect x="484" y="0" width="22" height="71" visibility="hidden" fill="none"/><svg:rect x="484" y="209" width="22" height="281" visibility="hidden" fill="none"/><svg:rect x="506" y="0" width="22" height="42" visibility="hidden" fill="none"/><svg:rect x="506" y="179" width="22" height="311" visibility="hidden" fill="none"/><svg:rect x="528" y="0" width="22" height="30" visibility="hidden" fill="none"/><svg:rect x="528" y="153" width="22" height="337" visibility="hidden" fill="none"/><svg:rect x="550" y="0" width="22" height="34" visibility="hidden" fill="none"/><svg:rect x="550" y="146" width="22" height="344" visibility="hidden" fill="none"/><svg:rect x="572" y="0" width="22" height="43" visibility="hidden" fill="none"/><svg:rect x="572" y="160" width="22" height="330" visibility="hidden" fill="none"/><svg:rect x="594" y="0" width="22" height="30" visibility="hidden" fill="none"/><svg:rect x="594" y="153" width="22" height="337" visibility="hidden" fill="none"/><svg:rect x="616" y="0" width="22" height="58" visibility="hidden" fill="none"/><svg:rect x="616" y="194" width="22" height="296" visibility="hidden" fill="none"/><svg:rect x="638" y="0" width="22" height="82" visibility="hidden" fill="none"/><svg:rect x="638" y="214" width="22" height="276" visibility="hidden" fill="none"/><svg:rect x="660" y="0" width="22" height="82" visibility="hidden" fill="none"/><svg:rect x="660" y="198" width="22" height="292" visibility="hidden" fill="none"/><svg:rect x="682" y="0" width="22" height="82" visibility="hidden" fill="none"/><svg:rect x="682" y="203" width="22" height="287" visibility="hidden" fill="none"/><svg:rect x="704" y="0" width="22" height="82" visibility="hidden" fill="none"/><svg:rect x="704" y="214" width="22" height="276" visibility="hidden" fill="none"/><svg:rect x="726" y="0" width="22" height="82" visibility="hidden" fill="none"/><svg:rect x="726" y="192" width="22" height="298" visibility="hidden" fill="none"/><svg:rect x="748" y="0" width="22" height="82" visibility="hidden" fill="none"/><svg:rect x="748" y="198" width="22" height="292" visibility="hidden" fill="none"/><svg:rect x="770" y="0" width="22" height="82" visibility="hidden" fill="none"/><svg:rect x="770" y="197" width="22" height="293" visibility="hidden" fill="none"/><svg:rect x="792" y="0" width="22" height="82" visibility="hidden" fill="none"/><svg:rect x="792" y="211" width="22" height="279" visibility="hidden" fill="none"/><svg:rect x="814" y="0" width="22" height="82" visibility="hidden" fill="none"/><svg:rect x="814" y="198" width="22" height="292" visibility="hidden" fill="none"/><svg:rect x="836" y="0" width="22" height="82" visibility="hidden" fill="none"/><svg:rect x="836" y="207" width="22" height="283" visibility="hidden" fill="none"/><svg:rect x="858" y="0" width="22" height="82" visibility="hidden" fill="none"/><svg:rect x="858" y="206" width="22" height="284" visibility="hidden" fill="none"/></svg:g>
    <svg:g id="objects"><svg:g stroke-width="3" objType="13" transform="translate(242,176)">
      <svg:polygon fill="#77f" points="2,-10 0,0 3,20 7,4 10,15 14,3 17,19 20,0 18,-10"/>
      <svg:polygon fill="#aaf" points="1,1 3,18 3,3 17,2 17,16 19,-4"/>
      <svg:g>
        <svg:polygon fill="#fff" points="5,10 8,11 9,14 10,11 13,10 10,9 9,6 8,9">
          <!--svg:animateTransform attributeName="transform" type="rotate" values="0 10 10; 365 10 10" dur="4s" repeatCount="indefinite" begin="0s"/-->
        </svg:polygon>
        <!--svg:animateTransform attributeName="transform" type="scale" values="0.7; 1.2; 0.7 " dur="2s" repeatCount="indefinite" begin="0s"/-->
      </svg:g>
    <svg:circle id="antiBonusMarker" cx="16" cy="14" r="4" fill="#e00">
      <svg:animate attributeName="display" values="block; none" calcMode="discrete" repeatCount="indefinite" begin="0s" dur="1s"/>
    </svg:circle></svg:g></svg:g>
    <svg:g id="caveWalls"><svg:polyline fill="url(#ceiling)" points="0,0 11,203 33,203 55,203 77,203 99,203 121,203 143,203 165,203 187,203 209,203 231,203 253,177 275,161 297,133 319,121 341,147 363,173 385,179 407,176 429,157 451,130 473,104 495,74 517,45 539,33 561,37 583,46 605,33 627,61 649,85 671,85 693,85 715,85 737,85 759,85 781,85 803,85 825,85 847,85 869,85 880,0"/><svg:polyline fill="url(#floor)" points="0,490 11,306 33,331 55,309 77,324 99,335 121,329 143,333 165,332 187,328 209,308 231,315 253,305 275,279 297,263 319,235 341,275 363,301 385,287 407,281 429,278 451,259 473,232 495,206 517,176 539,150 561,143 583,157 605,150 627,191 649,211 671,195 693,200 715,211 737,189 759,195 781,194 803,208 825,195 847,204 869,203 880,490"/></svg:g>
    <svg:g id="crashes"/>
  </svg:g>

  <svg:g id="fighter" transform="translate(275 154)" visibility="visible"><svg:use xlink:href="#noForceShieldVisual" id="forceShieldDom"/><svg:use xlink:href="#forward"/></svg:g>
    
  <svg:text x="2" y="8" fill="white" text-rendering="optimizeLegibility" id="message" visibility="hidden" font-size="9px">GameState:level
 | level:0 | objectsCount:1 | directions:dx=1, dy=0, state=forward | 
fighter:x=275, y=154 | ViewPort:distance=550, leftOffsetToShip=72, 
rightOffsetToShip=80 | collision:none | removingObject:32 | </svg:text>

  <svg:rect x="3" y="3" width="120" height="15" fill="#300" stroke-width="2" stroke="maroon"/>
  <svg:rect x="3" y="3" width="80" height="15" fill="url(#shieldGradient)" stroke="red" id="shieldBar"/>
  <svg:text x="6" y="15" fill="white" font-size="12px" font-weight="bold" id="shieldInfo">SHIELD: 100</svg:text>

  <svg:rect x="128" y="3" width="120" height="15" fill="#030" stroke-width="2" stroke="blue"/>
  <svg:rect x="128" y="3" width="80" height="15" fill="url(#fuelGradient)" stroke="red" id="fuelBar"/>
  <svg:text x="131" y="15" fill="white" font-size="12px" font-weight="bold" id="fuelInfo">FUEL: 116</svg:text>

  <svg:rect x="253" y="3" width="65" height="15" fill="gray" stroke-width="2" stroke="maroon"/>
  <svg:rect x="253" y="3" width="65" height="15" fill="gray" stroke="red" id="ammoBar"/>
  <svg:text x="256" y="15" fill="white" font-size="12px" font-weight="bold" id="ammoInfo">AMMO: 17</svg:text>

  <svg:rect x="323" y="3" width="65" height="15" fill="blue" stroke-width="2" stroke="brown"/>
  <svg:text x="326" y="15" fill="white" font-size="12px" font-weight="bold" id="levelInfo">LEVEL: 1</svg:text>

  <svg:rect x="393" y="3" width="84" height="15" fill="gold" stroke-width="2" stroke="navy"/>
  <svg:text x="396" y="15" fill="black" font-size="12px" font-weight="bold" id="scoreInfo">SCORE: 301</svg:text>

  <svg:g id="modalScreen" font-size="30px" stroke="steelblue" fill="white" stroke-width="1.5" font-weight="bold" text-anchor="middle" display="inherit">
    <svg:rect x="-10" y="-10" width="500" height="340" fill="black" fill-opacity="0.9"/>

  <svg:text x="280" y="270" font-size="13px" text-anchor="start">Negative mark</svg:text>
  <svg:text x="280" y="285" font-size="13px" text-anchor="start">Positive mark</svg:text>
  <svg:use xlink:href="#antiBonusMarker" x="255" y="262"/>
  <svg:use xlink:href="#bonusMarker" x="255" y="277"/>

  <svg:g fill="white" stroke="none" stroke-width="0" font-size="16px" text-anchor="start">

<svg:defs>
  <svg:g transform="translate(10 35)">
    <svg:g id="bomb"><svg:g>
      <svg:polygon fill="#9ff" points="4,3 3,4   8,9 1,9   1,11 8,11   3,16 4,17   9,12 9,19   11,19 11,12   16,17 17,16   12,11 19,11   19,9 12,9   17,4 16,3   11,8 11,1   9,1 9,8">
        <!--svg:animateTransform attributeName="transform" type="rotate" values="0 10 10; -365 10 10" dur="10s" repeatCount="indefinite" begin="0s"/-->
      </svg:polygon>
      <svg:circle cx="10" cy="10" fill="#88f" r="7">
        <!--svg:animate attributeName="r" values="8; 4; 8" dur="3s" repeatCount="indefinite" begin="0s"/-->
      </svg:circle>
    </svg:g></svg:g>
    <svg:text x="35" y="17">Bomb = Shield -20</svg:text>
  </svg:g>

  <svg:g transform="translate(10 60)">
    <svg:g id="ufo"><svg:g>
      <svg:ellipse cx="10" cy="8" rx="5" ry="3" fill="yellow">
        <!--svg:animate attributeName="fill" values="cyan; red; yellow" dur="0.5s" calcMode="discrete" repeatCount="indefinite" begin="0s"/-->
      </svg:ellipse>
      <svg:polygon fill="yellow" points="1,12 1,15 8,10 10,20 12,10 19,15 19,12">
        <!--svg:animateTransform attributeName="transform" type="scale" values="1 1; 1 0.8; 1 1" dur="0.6s" repeatCount="indefinite" begin="0s"/-->
      </svg:polygon>
      <svg:polygon fill="#333" points="4,15 0,18 2,20 8,15 12,15 18,20 20,18 16,15"/>
      <svg:polygon fill="white" points="-1,11 6,8 14,8 21,11"/>
      <svg:polygon fill="gray" points="-1,11 8,16 12,16 21,11"/>
    </svg:g></svg:g>
    <svg:text x="35" y="17">Ufo = Shield -30</svg:text>
  </svg:g>

  <svg:g transform="translate(10 85)">
    <svg:g id="death"><svg:g fill="#ccc">
      <svg:polygon points="2,1 1,2 18,19 19,18 11,10 19,2 18,1 1,18 2,19 11,10"/>
      <svg:circle cx="3" cy="3" r="2"/>
      <svg:circle cx="17" cy="3" r="2"/>
      <svg:circle cx="3" cy="17" r="2"/>
      <svg:circle cx="17" cy="17" r="2"/>
      <svg:circle cx="10" cy="10" r="6" fill="white"/>
      <svg:rect x="7" y="12" width="6" height="6" rx="2"/>
      <svg:g fill="red">
        <svg:circle cx="7" cy="9" r="1.5"/>
        <svg:circle cx="13" cy="9" r="1.5"/>
        <!--svg:animate attributeName="fill" values="red; black; white; black; red" dur="2s" repeatCount="indefinite" begin="0s"/-->
      </svg:g>
    </svg:g></svg:g>
    <svg:text x="35" y="17">Death = Shield -40</svg:text>
  </svg:g>

  <svg:g transform="translate(10 110)">
    <svg:g id="eye"><svg:g>
      <svg:ellipse cx="10" cy="10" rx="10" ry="5" fill="red"/>
      <svg:ellipse cx="10" cy="10" rx="10" ry="3" fill="white">
        <!--svg:animate attributeName="ry" values="3; 10; 3" dur="2s" repeatCount="indefinite" begin="0s"/-->
      </svg:ellipse>
      <svg:ellipse cx="10" cy="10" rx="3" ry="2" fill="darkgreen">
        <!--svg:animate attributeName="ry" values="2; 8; 2" dur="2s" repeatCount="indefinite" begin="0s"/>
        <svg:animate attributeName="cx" values="10; 8; 8; 12; 12; 10" dur="2s" repeatCount="indefinite" begin="1s"/-->
      </svg:ellipse>
     </svg:g></svg:g>
    <svg:text x="35" y="17">Evil Eye = Shield -20</svg:text>
  </svg:g>

  <svg:g transform="translate(10 135)">
    <svg:g id="coil"><svg:g>
      <svg:rect x="7" y="0" width="6" height="30" fill="brown"/>
      <svg:rect x="1" y="26" width="18" height="4" fill="brown" rx="2"/>
      <svg:g>
        <svg:rect x="3" y="1" width="14" height="1" fill="#0ff"/>
        <svg:rect x="0" y="3" width="20" height="2" fill="#0dd"/>
        <svg:rect x="3" y="6" width="14" height="1" fill="#0bb"/>
        <svg:rect x="0" y="8" width="20" height="2" fill="#099"/>
        <svg:rect x="3" y="11" width="14" height="1" fill="#0bb"/>
        <svg:rect x="0" y="13" width="20" height="2" fill="#0dd"/>
        <svg:rect x="3" y="16" width="14" height="1" fill="#0ff"/>
        <!--svg:animateTransform attributeName="transform" type="scale" values="1 1; 1 0.5; 1" dur="2.4s" repeatCount="indefinite" begin="0s"/-->
      </svg:g>
      <svg:rect x="1" y="1" width="2" height="2" fill="yellow">
        <!--svg:animateTransform attributeName="transform" type="translate" values="2,1; 10,4; 17,9; 2,7; 18,1; 7,7; 2,9; 12,3" dur="1s" calcMode="discrete" repeatCount="indefinite" begin="0s"/-->
      </svg:rect>
    </svg:g></svg:g>
    <svg:text x="35" y="17">Coil = Shield -30</svg:text>
  </svg:g>

  <svg:g transform="translate(10 170)">
    <svg:g><svg:g>
      <svg:rect x="0" y="0" width="20" height="30" fill="darkgray" rx="3"/>
      <svg:g fill="steelblue">
        <svg:rect x="3" y="0" width="7" height="25" rx="4"/>
        <svg:rect x="12" y="0" width="3" height="20" rx="2"/>
        <!--svg:animate attributeName="fill" values="darkgray; steelblue; steelblue; darkgray" dur="2s" repeatCount="indefinite" begin="0s"/>
        <svg:animateTransform attributeName="transform" type="scale" values="1 1; .4 1; 1 1; 1 1" dur="4.5s" repeatCount="indefinite" begin="0s"/-->
      </svg:g>
    </svg:g></svg:g>
    <svg:text x="35" y="16">Bolt = Shield -30</svg:text>
    <svg:text x="35" y="28" font-size="11">(undestroyable)</svg:text>
  </svg:g>

  <svg:g transform="translate(10 217)">
    <svg:g id="icicle"><svg:g stroke-width="3">
      <svg:polygon fill="#77f" points="2,-10 0,0 3,20 7,4 10,15 14,3 17,19 20,0 18,-10"/>
      <svg:polygon fill="#aaf" points="1,1 3,18 3,3 17,2 17,16 19,-4"/>
      <svg:g>
        <svg:polygon fill="#fff" points="5,10 8,11 9,14 10,11 13,10 10,9 9,6 8,9">
          <!--svg:animateTransform attributeName="transform" type="rotate" values="0 10 10; 365 10 10" dur="4s" repeatCount="indefinite" begin="0s"/-->
        </svg:polygon>
        <!--svg:animateTransform attributeName="transform" type="scale" values="0.7; 1.2; 0.7 " dur="2s" repeatCount="indefinite" begin="0s"/-->
      </svg:g>
    </svg:g></svg:g>
    <svg:text x="35" y="13">Icicle = Shield -20</svg:text>
  </svg:g>

  <svg:g transform="translate(21 225)">
    <svg:g id="boss" transform="translate(20 20) scale(-1 1)"><svg:g>
      
      <svg:polygon fill="#444" points="20,7 26,20 20,35 24,37 30,20 24,7"/>
      
      <svg:polygon fill="#444" points="0,12 10,12 2,20 0,19"/>      
      <svg:rect x="0" y="0" width="30" height="10" fill="#555" transform="rotate(-15) translate(-3 6)" rx="3"/>
      <svg:circle cx="22" cy="6" r="3" fill="#222"/>
      <svg:rect x="3" y="9" width="5" height="4" fill="white">
        <!--svg:animate attributeName="height" values="4; 1; 4" dur="2s" repeatCount="indefinite" begin="0s"/-->
      </svg:rect>

      <svg:polygon fill="#666" points="25,14 40,8 40,20"/>
      <svg:polygon fill="#888" points="30,24 40,22 34,34"/>
      <svg:rect x="0" y="0" width="14" height="14" fill="#999" transform="rotate(-15) translate(9 19)" rx="3"/>
      <svg:circle cx="25" cy="26" r="4" fill="maroon"/>

      <svg:g>
        <svg:rect x="3" y="21" width="18" height="7" fill="#777" rx="2"/>
        <svg:polygon fill="#777" points="3,26 20,26 3,30"/>
        <svg:rect x="0" y="23" width="5" height="2" fill="red"/>
        <svg:rect x="0" y="27" width="5" height="2" fill="red"/>
        <!--svg:animateTransform attributeName="transform" type="translate" values="0 0; 3 3; 3 -3; 0 0" dur="2s" repeatCount="indefinite" begin="0s"/-->
      </svg:g>
      <svg:polygon fill="#777" points="0,40 2,36 4,34 20,32 40,38 40,40 35,38 30,40 25,38 20,40 15,38 10,40 5,38"/>

    </svg:g></svg:g>
    <svg:text x="25" y="40">Boss = Shield -80</svg:text>
    <svg:text x="25" y="53" font-size="11">(has shield, shoot more times)</svg:text>
  </svg:g>





  <svg:g transform="translate(10 330)">
    <svg:g id="shield"><svg:g fill="brown">
      <svg:rect x="0" y="0" width="20" height="13" rx="2"/>
      <svg:circle cx="10" cy="10" r="10"/>
      <svg:g fill="green">
        <svg:rect x="3" y="3" width="14" height="7" rx="2"/>
        <svg:circle cx="10" cy="10" r="7"/>
        <!--svg:animate attributeName="fill" values="green; lightblue; yellow; green" dur="3s" repeatCount="indefinite" begin="0s"/-->
      </svg:g>
      <svg:ellipse cx="10" cy="10" rx="6" ry="3" fill="green"/>
      <svg:ellipse cx="10" cy="12" rx="3" ry="5" fill="orange"/>
    </svg:g></svg:g>
    <svg:text x="35" y="17">Shield = Shield +20</svg:text>
  </svg:g>

  <svg:g transform="translate(10 355)">
    <svg:g id="fuel"><svg:g fill="#0aa">
      <svg:polygon points="2,12 10,0 18,12"/>
      <svg:ellipse cx="10" cy="13" rx="10" ry="7">
        <!--svg:animate attributeName="rx" values="9.5; 7.5; 9.5" dur="1s" repeatCount="indefinite" begin="0s"/-->
      </svg:ellipse>
      <svg:ellipse cx="13" cy="11" rx="3" ry="6" fill="#099"/>
      <svg:ellipse cx="7" cy="13" rx="2" ry="4" fill="white"/>
    </svg:g></svg:g>
    <svg:text x="35" y="17">Petrol = Fuel +100</svg:text>
  </svg:g>

  <svg:g transform="translate(10 380)">
    <svg:g id="bonus"><svg:g>
      <svg:rect x="0" y="0" width="20" height="20" fill="#055" rx="3"/>
      <svg:rect x="3" y="3" width="14" height="14" fill="blue" rx="3"/>
      <svg:g>
        <svg:rect x="8" y="4" width="4" height="12" fill="white" rx="2"/>
        <svg:rect x="4" y="8" width="12" height="4" fill="white" rx="2"/>
        <!--svg:animateTransform attributeName="transform" type="rotate" values="0 10 10; 365 10 10" dur="3s" repeatCount="indefinite" begin="0s"/-->
      </svg:g>
    </svg:g></svg:g>
    <svg:text x="35" y="17">Bonus = Points +50</svg:text>
  </svg:g>

  <svg:g transform="translate(10 405)">
    <svg:g id="ammo"><svg:g>
      <svg:rect x="0" y="0" width="20" height="20" fill="gold" rx="2"/>
      <svg:rect x="0" y="4" width="20" height="9" fill="orange"/>
      <svg:g fill="black">
        <svg:ellipse cx="4" cy="7" rx="2.5" ry="6" fill="black"/>
        <svg:ellipse cx="10" cy="8" rx="2.5" ry="6" fill="black"/>
        <svg:ellipse cx="16" cy="9" rx="2.5" ry="6" fill="black"/>
        <svg:rect x="1" y="12" width="5" height="5" fill="maroon"/>
        <svg:rect x="7" y="13" width="5" height="5" fill="maroon"/>
        <svg:rect x="13.5" y="14" width="5" height="5" fill="maroon"/>
        <!--svg:animateTransform attributeName="transform" type="scale" values="1 1; .1 1; 1 1; 1 1" dur="3s" repeatCount="indefinite" begin="0s"/-->
      </svg:g>
    </svg:g></svg:g>
    <svg:text x="35" y="17">Magazine = Ammo +6</svg:text>
  </svg:g>

  <svg:g transform="translate(10 430)">
    <svg:g id="cistern"><svg:g>
      <svg:rect x="0" y="0" width="20" height="10" fill="#0aa" rx="2"/>
      <svg:rect x="10" y="10" width="2" height="18" fill="#066" rx="1">
        <!--svg:animate attributeName="height" values="18; 6; 18" dur="2s" repeatCount="indefinite" begin="0.5s"/-->
      </svg:rect>
      <svg:rect x="1" y="1" width="18" height="2" fill="black" rx="1">
        <!--svg:animate attributeName="height" values="1; 4; 1" dur="1.7s" repeatCount="indefinite" begin="0.3s"/-->
      </svg:rect>
      <svg:rect x="1" y="6" width="18" height="3" fill="#077" rx="1"/>
      <svg:polygon fill="yellow" points="0,30 0,20 5,11, 15,11 20,20 20,30 18,30 18,20 15,16 5,16 2,20 2,30"/>
      <svg:rect x="0" y="20" width="20" height="1" fill="orange"/>
    </svg:g></svg:g>
    <svg:text x="35" y="17">Cistern = Fuel +100</svg:text>
  </svg:g>

  <svg:g transform="translate(10 470)">
    <svg:g id="hourglass"><svg:g><svg:rect fill="steelblue" x="10" y="-5" height="15" width="1"/><svg:g>

    <svg:rect fill="maroon" x="3" y="-1" height="22" width="2"/>
    <svg:rect fill="maroon" x="15" y="-1" height="22" width="2"/>
    <svg:g transform="translate(0,3)">
      <svg:use xlink:href="#halfHourglassBg"/>
      <svg:use xlink:href="#halfHourglassSand">
        <!--svg:animateTransform attributeName="transform" type="translate" values="0,0; 10,6; 10,6" dur="4s" begin="0s" repeatCount="indefinite" additive="sum"/>
        <svg:animateTransform attributeName="transform" type="scale" values="1; 0; 0" dur="4s" begin="0s" repeatCount="indefinite" additive="sum"/-->
      </svg:use>
    </svg:g>

    <svg:rect fill="brown" height="3" width="20"/>
    <svg:rect fill="brown" y="17" height="3" width="20"/>
    <svg:g transform="translate(20,17), rotate(180)">
      <svg:use xlink:href="#halfHourglassBg"/>
      <svg:use xlink:href="#halfHourglassSand">
        <!--svg:animateTransform attributeName="transform" type="scale" values="1 0; 1 1; 1 1" dur="4s" begin="0s" repeatCount="indefinite"/-->
    </svg:use>
    </svg:g>
    <!--svg:animateTransform attributeName="transform" type="rotate" values="0 10 10; 0 10 10; 180 10 10" begin="0s" dur="4s" repeatCount="indefinite"/-->
    </svg:g></svg:g></svg:g>
    <svg:text x="35" y="8">Hourglass = Points +20</svg:text>
    <svg:text x="35" y="20" font-size="11">(affects time, lasts 6 seconds)</svg:text>
  </svg:g>

  <svg:g transform="translate(10 505)">
    <svg:g id="forceShield"><svg:g>
      <svg:rect width="20" height="20" x="0" y="0" rx="8" fill="cyan">
        <!--svg:animate attributeName="fill" values="navy; cyan; navy; cyan; navy" dur="1.2s" repeatCount="indefinite" begin="0s"/-->
      </svg:rect>
      <svg:rect width="14" height="14" x="3" y="3" rx="6" fill="black"/>
      <svg:g>
        <svg:circle cx="10" cy="8" r="3" fill="white"/>
        <svg:circle cx="12" cy="12" r="3" fill="magenta"/>
        <svg:circle cx="8" cy="12" r="3" fill="darkgreen"/>
        <!--svg:animateTransform attributeName="transform" type="rotate" values="0 10 10; -360 10 10" begin="0.5s" dur="3s" repeatCount="indefinite"/-->
      </svg:g>

    </svg:g></svg:g>
    <svg:text x="35" y="9">Force Shield = Shield +10000</svg:text>
    <svg:text x="35" y="20" font-size="11">(temporary effect, lasts 4 seconds)</svg:text>
  </svg:g>
</svg:defs>
  </svg:g>

  <svg:g fill="white" stroke="none" stroke-width="0" text-anchor="end" font-size="13px">
    <svg:text x="99.5%" y="4%">fly through cavern; avoid the walls</svg:text>
    <svg:text x="99.5%" y="9%">pick up positive (+) bonuses, esp. fuel</svg:text>
    <svg:text x="99.5%" y="14%">avoid/shoot enemies and negative (-) ones</svg:text>
  
    <svg:text x="0.5%" y="4%" text-anchor="start">controls: arrow keys, Z/Space, B/X</svg:text>
    <svg:text x="0.5%" y="9%" text-anchor="start">mobile: tilt left/right/front/back</svg:text>
    <svg:text x="0.5%" y="14%" text-anchor="start">fire/bomb: tap/hold the box</svg:text>
  
    <svg:text x="1%" y="62%" text-anchor="start" fill="#9ee" font-size="13px" id="hallOfFame"><svg:tspan x="1%" dx="0" dy="14">000</svg:tspan><svg:tspan x="1%" dx="40" dy="0">................... No data</svg:tspan></svg:text>

  </svg:g>

    <svg:use xlink:href="#normal" x="49%" y="16%"/>
    <svg:text x="50%" y="31%" fill="white" id="modalScreenText">LEVEL 1 COMPLETED</svg:text>
    <svg:text x="50%" y="40%" fill="gold" font-size="26px" id="modalScreenSubText">Shield 100 + Fuel 117 = Score 300</svg:text>
    <svg:a id="modalScreenLink" xlink:href="javascript:Game.levelStart()"><svg:text x="50%" y="58%" fill="url(#bigTxt)" font-size="66px" id="modalScreenLinkText">CONTINUE<!--svg:animate attributeName="fill" values="white; yellow; red; green; navy; orange; white" dur="3s" repeatCount="indefinite" begin="0s"/--></svg:text></svg:a>
    <svg:g stroke="none" stroke-width="0">
      <svg:text x="62%" y="71%" fill="lightgreen" cursor="pointer" font-size="15px" font-weight="bolder" onclick="javascript:AudioMan.switcher(this)">Sound ON/OFF</svg:text>
    </svg:g>

  </svg:g>

  <svg:g fill="none" stroke="#ddd" stroke-width="1" pointer-events="all" id="fireDisc">
    <svg:circle cx="89%" cy="85%" r="20"/>
    <svg:rect x="380" y="220" width="96" height="96" rx="10"/>
  </svg:g>

<svg:script type="text/javascript"><![CDATA[

/* ***************************************************************************
   ****************** SVG Cavern Fighter by Marek Raida *****************
   ****************************************************************************
*/

// couple of globals
var Game, Fighter, Cave, ViewPort, Util, Objects, GameStartTime, AudioMan; // global singletons

/* ***************************************************************************
   *************************** Generic Util object ***************************
   ****************************************************************************
*/
function Util () { // constructor
  this.svgns = "http://www.w3.org/2000/svg"; // common namespace
  this.xlinkns = "http://www.w3.org/1999/xlink"; // another common namespace
  this.msg = document.getElementById("message").firstChild; // messages DOM holder
  this.messages = new Array();
  this.debug = 0;  // flag whether debug messaging in allowed or not
}

// compute real BBox, with applied transformation changes to get real screen pixels
Util.prototype.getComputedBBox = function (obj) {
  var ibb = obj.getBBox();
  var ictm = obj.getCTM();
  return {x:(ibb.x+ictm.e), y:(ibb.y+ictm.f), width:(ibb.width), height:(ibb.height)};
}

// identify collision generic method working with precomputed visible screen BBoxes of pair of elements
Util.prototype.isCollision = function (bb1, bb2) {  
            // test x axis
  if ( (((bb1.x>=bb2.x) && (bb1.x<=(bb2.x+bb2.width))) || 
       (((bb1.x+bb1.width)>=bb2.x) && ((bb1.x+bb1.width)<=(bb2.x+bb2.width))) || 
       ((bb2.x>=bb1.x) && (bb2.x<=(bb1.x+bb1.width))) || 
       (((bb2.x+bb2.width)>=bb1.x) && ((bb2.x+bb2.width)<=(bb1.x+bb1.width))) 
       ) && // test y axis
       (((bb1.y>=bb2.y) && (bb1.y<=(bb2.y+bb2.height))) || 
       (((bb1.y+bb1.height)>=bb2.y) && ((bb1.y+bb1.height)<=(bb2.y+bb2.height))) || 
       ((bb2.y>=bb1.y) && (bb2.y<=(bb1.y+bb1.height))) || 
       (((bb2.y+bb2.height)>=bb1.y) && ((bb2.y+bb2.height)<=(bb1.y+bb1.height))) 
       ) 
     ) return true;
  return false;
}

// identify collision generic method working with precomputed visible screen BBoxes of pair of elements
Util.prototype.message = function (key, msg) {
  if (!this.debug) return;
  this.messages[key] = msg;
  var out = "";
  for (var i in this.messages) out += i +":" + this.messages[i] + " | ";
  this.msg.data = out;
}

// method for manual (re)start of all child animation elements
Util.prototype.startAnimations = function (el) {
  var anims = el.getElementsByTagName("animate");
  if (anims.length && anims[0].beginElement) {
    for (var i = 0; i < anims.length; i++){
      anims[i].beginElement();
    }
  }
  var anims = el.getElementsByTagName("animateTransform");
  if (anims.length && anims[0].beginElement) {
    for (var i = 0; i < anims.length; i++){
      anims[i].beginElement();
    }
  }
}



/* ****************************************************************************
   ******************************* Game object ********************************
   ****************************************************************************
*/
function Game () { // constructor
  this.level = 0; // current level
  this.state = "menu"; // state of game running or in other state
  this.debug = 0;  // flag whether debug messaging in allowed or not
  this.scoreInfo = document.getElementById("scoreInfo").firstChild;
  this.shieldInfo = document.getElementById("shieldInfo").firstChild;
  this.levelInfo =  document.getElementById("levelInfo").firstChild;
  this.shieldBar = document.getElementById("shieldBar");
  this.shieldMax = 450; // 1.5* default
  this.fuelInfo = document.getElementById("fuelInfo").firstChild;
  this.fuelBar = document.getElementById("fuelBar");
  this.ammoBar = document.getElementById("ammoBar");
  this.fuelWarning = null;
  this.fuelWarningThreshold = 100;
  this.shieldWarning = null;
  this.shieldWarningThreshold = 50;
  this.ammoWarning = null;
  this.fuelMax = 300; // 1.5* default
  this.ammoInfo = document.getElementById("ammoInfo").firstChild;
  this.modalScreen = document.getElementById("modalScreen");
  this.modalScreenText = document.getElementById("modalScreenText").firstChild;
  this.modalScreenSubText = document.getElementById("modalScreenSubText").firstChild;
  this.modalScreenLink = document.getElementById("modalScreenLink");
  this.modalScreenLinkText = document.getElementById("modalScreenLinkText").firstChild;
  this.showMarkerOnObjects = 1;
  this.decorations = 1;
  this.supportsVibrate = "vibrate" in navigator;
}

// modifyModalScreen
Game.prototype.setModalScreen = function (action) {
  this.state = action;
  Util.message("GameState", this.state);
  if (action == "menu") {
    Cave.reset();
    this.modalScreenText.data = "SVG CAVERN FIGHTER";
    this.modalScreenSubText.data = "*** by Marek Raida ***";
    this.modalScreenLinkText.data = "START GAME";
    this.modalScreenLink.setAttributeNS(Util.xlinkns, "href", "javascript:Game.levelStart(true)");
    this.modalScreen.setAttributeNS(null, "display", "inherit");
    CreditsManager.getHighScore();
    AudioMan.play("a_gong");
  } else if (action == "level") {
    this.modalScreenText.data = "LEVEL "+ this.level +" COMPLETED";
    Fighter.score += Fighter.shield + Fighter.fuel; 
    this.modalScreenSubText.data = "Shield " + Fighter.shield + " + Fuel " + Fighter.fuel + " = Score " + Fighter.score;
    this.modalScreenLinkText.data = "CONTINUE";
    this.modalScreenLink.setAttributeNS(Util.xlinkns, "href", "javascript:Game.levelStart()");
    this.modalScreen.setAttributeNS(null, "display", "inherit");
  } else if (action == "end") {
    this.modalScreenText.data = "GAME OVER" + ((Fighter.fuel <= 0) ? ", OUT OF FUEL" : ((Fighter.shield <= 0) ? ", OUT OF SHIELD" : ""));
    this.modalScreenSubText.data = "Your score is " + Fighter.score + " points, level " + this.level;
    this.modalScreenLinkText.data = "MENU";
    this.modalScreenLink.setAttributeNS(Util.xlinkns, "href", "javascript:Game.setModalScreen('menu')");
    this.modalScreen.setAttributeNS(null, "display", "inherit");
  } else if (action == "running") {
    this.modalScreen.setAttributeNS(null, "display", "none");
  }
  Fighter.resetForceShield();
}

// begin everything/level
Game.prototype.levelStart = function (gameStart) {
  if (this.state == "running") return;
  if (gameStart) {
    this.level = 0; // reset fighter also!!
  }
  Util.message("level", this.level++);
  Cave.reset();
  ViewPort.reset();
  AudioMan.reset();
  Cave.generateCave();
  Fighter.setListeners(true);
  Fighter.reset(gameStart);
  this.setModalScreen("running");
  AudioMan.play("a_music", true);
}

// end level
Game.prototype.levelStop = function () {
  Fighter.setListeners(false);
  this.setModalScreen("level");  
  this.showStats();
  AudioMan.reset();
  AudioMan.play("a_level");
  this.state = "level"; // workaround
  this.showStats();
}

// end game
Game.prototype.finish = function (byEscape) {
  Fighter.setListeners(false);
  this.showStats();
  Fighter.setVisualState("crash");
  this.setModalScreen("end");
  AudioMan.reset();
  AudioMan.play("a_crash4");
  this.showStats();
  if (!byEscape && (Fighter.score > 200)) window.setTimeout(CreditsManager.writeDown, 500);   // give player chance to enter hall of fame, with little delay only
}

// method for rendering game statistics
Game.prototype.showStats = function () {
  if (Fighter.shieldOrg) { // force shield exception
    this.shieldBar.setAttributeNS(null, "width", 120); // draw percent bar for extra shield
  } else {
    if (Fighter.shield > this.shieldMax) Fighter.shield = this.shieldMax;
    this.shieldBar.setAttributeNS(null, "width", Math.ceil((Fighter.shield/this.shieldMax)*120)); // draw percent bar for shield
  }
  if (Fighter.fuel > this.fuelMax) Fighter.fuel = this.fuelMax;
  this.fuelBar.setAttributeNS(null, "width", Math.ceil((Fighter.fuel/this.fuelMax)*120)); // draw percent bar for fuel
  this.shieldInfo.data = "SHIELD: " + Fighter.shield;
  this.fuelInfo.data = "FUEL: " + Fighter.fuel--;
  this.scoreInfo.data = "SCORE: " + Fighter.score++;
  this.ammoInfo.data = "AMMO: " + Fighter.ammo;
  this.levelInfo.data = "LEVEL: " + this.level;
  if ((Fighter.fuel < this.fuelWarningThreshold) && !this.fuelWarning) { // make nice visual representation of fuel running out
    this.fuelWarning = this.getWarningAnimation();
    this.fuelBar.appendChild(this.fuelWarning);
    if (this.fuelWarning.beginElement) this.fuelWarning.beginElement();
    AudioMan.play("a_alarm");
  } else if ((Fighter.fuel > this.fuelWarningThreshold) && this.fuelWarning) {
    this.fuelBar.removeChild(this.fuelWarning);
    this.fuelWarning = null;
  }
  if ((Fighter.shield < this.shieldWarningThreshold) && !this.shieldWarning) { // make nice visual representation of low shiel
    this.shieldWarning = this.getWarningAnimation();
    this.shieldBar.appendChild(this.shieldWarning);
    if (this.shieldWarning.beginElement) this.shieldWarning.beginElement();
    AudioMan.play("a_alarm2");
  } else if ((Fighter.shield > this.shieldWarningThreshold) && this.shieldWarning) {
    this.shieldBar.removeChild(this.shieldWarning);
    this.shieldWarning = null;
  }
  if (!Fighter.ammo && !this.ammoWarning) { // make nice visual representation of no ammo
    this.ammoWarning = this.getWarningAnimation();
    this.ammoBar.appendChild(this.ammoWarning);
    if (this.ammoWarning.beginElement) this.ammoWarning.beginElement();
    AudioMan.play("a_alarm2");
  } else if (Fighter.ammo && this.ammoWarning) {
    this.ammoBar.removeChild(this.ammoWarning);
    this.ammoWarning = null;
  }
}

// method for preparing waring animation
Game.prototype.getWarningAnimation = function () {
  var ani = document.createElementNS(Util.svgns, "animate");
  ani.setAttributeNS(null, "attributeName", "stroke-width");
  ani.setAttributeNS(null, "calcMode", "discrete");
  ani.setAttributeNS(null, "dur", "0.5s");
  ani.setAttributeNS(null, "repeatCount", "indefinite");
  ani.setAttributeNS(null, "values", "2; 8");
  return ani;
}

// switch marker support
Game.prototype.markerSwitcher = function (elem) {
  if (!this.showMarkerOnObjects) {
    this.showMarkerOnObjects = 1;
    elem.setAttributeNS(null, "fill", "lightgreen");
  } else {
    this.showMarkerOnObjects = 0;
    elem.setAttributeNS(null, "fill", "red");
  }
}

// switch on/off debugging options
Game.prototype.debugSwitcher = function (elem) {
  if (!this.debug) {
    this.debug = 1;
    Util.debug = 1;
    elem.setAttributeNS(null, "fill", "lightgreen");
  } else {
    this.debug = 0;
    Util.debug = 0;
    elem.setAttributeNS(null, "fill", "red");
  }
}

// switch on/off decorations options
Game.prototype.decorationsSwitcher = function (elem) {
  if (!this.decorations) {
    this.decorations = 1;
    elem.setAttributeNS(null, "fill", "lightgreen");
  } else {
    this.decorations = 0;
    elem.setAttributeNS(null, "fill", "red");
  }
}



/* ****************************************************************************
   ************************** Cave/environment object *************************
   ****************************************************************************
*/
function Cave () { // constructor
  this.envBoxWidth = 22; // width of one rectangle creating cave shape
  this.cave = document.getElementById("cave");  // cave itself in dom
  this.caveWalls = document.getElementById("caveWalls");  // cave floor and ceiling
  this.environment = document.getElementById("environment");  // element of cave where are all collision detection boxes stored
  this.bcgDecors = document.getElementById("bcgDecors");  // cave background decorations
  this.caveColors = null; // pair od cave color information
  this.caveTop = 20;  // upper level used for generation
  this.caveBottom = 310; // lower level used for generation
  this.tunnelMinSize = 110; // minimal allowed tunnel size
  this.tunnelVarSize = 30; // variable tunnel size
  this.pieces = 0; // how many pieces of steps in horizontal axis is representing cave
  this.realPiecesMax = 0; // pieces*2
  this.objects = document.getElementById("objects");  // game objects in DOM
  this.crashes = document.getElementById("crashes");  // game crashes in DOM
  this.objectsRefs = new Array();  // array of object references
  this.initialThreshold = 10; // how long should be cave user friendly straight from both beginning and end
}

// reset method
Cave.prototype.reset = function () {
  this.tunnelMinSize = 110;
  this.objectsRefs = new Array();
  while (this.environment.hasChildNodes()) this.environment.removeChild(this.environment.firstChild);
  while (this.crashes.hasChildNodes()) this.crashes.removeChild(this.crashes.firstChild);
  while (this.objects.hasChildNodes()) this.objects.removeChild(this.objects.firstChild);
  while (this.caveWalls.hasChildNodes()) this.caveWalls.removeChild(this.caveWalls.firstChild);
  while (this.bcgDecors.hasChildNodes()) this.bcgDecors.removeChild(this.bcgDecors.firstChild);
  var fin = document.getElementById("finishLine")
  fin.setAttributeNS(null, "display", "none");
  this.caveColors = null;
}

// modify randomly cave color
Cave.prototype.setCaveColor = function (pair) {
  if (!pair && !this.caveColors) {
    var colors = new Array({c1:"beige",c2:"brown"}, {c1:"lightgreen",c2:"darkgreen"}, {c1:"lightblue",c2:"navy"}, {c1:"pink",c2:"magenta"}, {c1:"yellow",c2:"red"})
    pair = colors[Math.round(Math.random() * (colors.length-1))];
    this.caveColors = pair;
  } else if (!pair && this.caveColors) {
    pair = this.caveColors;
  }
  document.getElementById("ceilOffset1").setAttributeNS(null, "stop-color", pair.c1);
  document.getElementById("ceilOffset2").setAttributeNS(null, "stop-color", pair.c2);
  document.getElementById("floorOffset2").setAttributeNS(null, "stop-color", pair.c1);
  document.getElementById("floorOffset1").setAttributeNS(null, "stop-color", pair.c2);
}

// cave generation
Cave.prototype.generateCave = function () {
  var y = 100; // current generation y position, initial point
  var polyCorrecture = 3; // pixels, how much should polygons oversize bouncing boxes
  var polyTop = "0,0 "; // point values of visual cave ceiling representation
  var polyBottom = "0,"+(this.caveBottom+50)+" "; // point values of visual cave ceiling representation
  var direction = 1; // direction indicates whether generate up (1) or down (-1), but never straight
  var dirCountDown = 0; // how long hold direction count (0-5)
  var justGenerated = 0;
  this.pieces = 40 + (Game.level-1)*10;
  this.tunnelMinSize -= (Game.level*2);
  this.realPiecesMax = (this.pieces*2);
  
  Fighter.setShipToCoordinates(100, (y + this.tunnelMinSize/2)); // set initial fighters position to be in tunnel

  for (var x = 0; x < this.pieces; x++) {
    var varHeight = (Math.round(Math.random()*this.tunnelVarSize)); // random height of tunnel
    if (dirCountDown < 1) {
      direction = (Math.random()>.5) ? -1 : 1;
      dirCountDown = 1 + Math.round(Math.random()*4);
      justGenerated = 1;
    } else justGenerated = 0;

    if ((x > this.initialThreshold) && (x < (this.pieces - this.initialThreshold))) { // assure friendly cave beginning/ending
      y = y + (direction * varHeight);
    }
      
    if (y > this.caveBottom-(this.tunnelMinSize+this.tunnelVarSize)) {
      y = this.caveBottom-(this.tunnelMinSize+this.tunnelVarSize);
      dirCountDown = 0;
    }
    if (y < this.caveTop) {
      y = this.caveTop;
      dirCountDown = 0;
    }

    this.setCaveColor(null);

    // generate objects to the cave
    if ( x && ((x % (24 - Game.level * 2)) == 0) && (x < (this.pieces - this.initialThreshold)) ) { // generate fuel every XX pieces
    	 this.generateObject(x, y, varHeight, 0);
    } else if ((x>this.initialThreshold) && (x < (this.pieces - this.initialThreshold)) && (!justGenerated) && 
      (!this.objectsRefs[(this.objectsRefs.length-2)]) && (Math.random()>.7) ) {
      this.generateObject(x, y, varHeight, null);
    } else if ((Game.level > 1) && (x == (this.pieces - this.initialThreshold + 1))) {
      this.generateObject(x, y, varHeight, (ObjectTypes.length-1)); // boss, hard one temporarily, !!!!
    } else {
      this.generateDecoration(x, y, varHeight);
      this.objectsRefs.push(null,null); // empty placeholders
    }

    polyTop += (x*this.envBoxWidth+(this.envBoxWidth/2)) + "," + (y+polyCorrecture) + " ";
    polyBottom += (x*this.envBoxWidth+(this.envBoxWidth/2)) + "," + (y+varHeight+this.tunnelMinSize-polyCorrecture) + " ";


    // ceiling, object used for collision detection
    var rec = document.createElementNS(Util.svgns, "rect");
    rec.setAttributeNS(null, "x", x*this.envBoxWidth);
    rec.setAttributeNS(null, "y", 0);
    rec.setAttributeNS(null, "width", this.envBoxWidth);
    rec.setAttributeNS(null, "height", y);
    rec.setAttributeNS(null, "visibility", Game.debug ? "visible" : "hidden");
    rec.setAttributeNS(null, "fill", Game.debug ? "blue" : "none");
    this.environment.appendChild(rec);
    
    // floor, object used for collision detection
    var rec = document.createElementNS(Util.svgns, "rect");
    rec.setAttributeNS(null, "x", x*this.envBoxWidth);
    rec.setAttributeNS(null, "y", y+varHeight+this.tunnelMinSize);
    rec.setAttributeNS(null, "width", this.envBoxWidth);
    rec.setAttributeNS(null, "height",  this.caveBottom-y-varHeight-this.tunnelMinSize);
    rec.setAttributeNS(null, "visibility", Game.debug ? "visible" : "hidden");
    rec.setAttributeNS(null, "fill", Game.debug ? "blue" : "none");
    this.environment.appendChild(rec);
    
    dirCountDown--; // decrement direction countdown generation repetition times
  }
  Util.message("objectsCount", Cave.objects.childNodes.length);

  polyTop += this.pieces*this.envBoxWidth + ",0";
  polyBottom += this.pieces*this.envBoxWidth + "," + (this.caveBottom+50);
  
  // ceiling, visual representation
  var ceilingHolder = document.createElementNS(Util.svgns, "polyline");
  ceilingHolder.setAttributeNS(null, "fill", (Game.debug ? "brown" : "url(#ceiling)"));
  if (Game.debug) ceilingHolder.setAttributeNS(null, "opacity", .5);
  ceilingHolder.setAttributeNS(null, "points", polyTop);
  this.caveWalls.appendChild(ceilingHolder);
  
  // floor, visual representation
  var floorHolder = document.createElementNS(Util.svgns, "polyline");
  floorHolder.setAttributeNS(null, "fill", (Game.debug ? "brown" : "url(#floor)"));
  if (Game.debug) floorHolder.setAttributeNS(null, "opacity", .5);
  floorHolder.setAttributeNS(null, "points", polyBottom);
  this.caveWalls.appendChild(floorHolder);

  // do finish flags movement
  var fin = document.getElementById("finishLine")
  fin.setAttributeNS(null, "transform", "translate(" + (this.pieces*this.envBoxWidth) + ", " + y + ")");
  fin.setAttributeNS(null, "display", "inherit");
}


// cave background decoration
Cave.prototype.generateDecoration = function (x, y, varHeight) {
  if (!Game.decorations || (Math.random()<.6)) return;
  var decorColors = new Array("yellow", "gray", "cyan", "blue", "gold", "green", "pink");
  var size = 1 + Math.round(Math.random());
  var rec = document.createElementNS(Util.svgns, "rect");
  rec.setAttributeNS(null, "x", x*this.envBoxWidth + Math.round(Math.random()*this.envBoxWidth));
  rec.setAttributeNS(null, "y", (y+(Math.random()*(this.tunnelMinSize+varHeight))));
  rec.setAttributeNS(null, "width", size);
  rec.setAttributeNS(null, "height", size);
  rec.setAttributeNS(null, "fill", decorColors[Math.round(Math.random()*(decorColors.length-1))]);
  this.bcgDecors.appendChild(rec);

  var caveDecor = (Math.random()*10);
  var size = Math.round(Math.random()*20);
  if (size < 4) size = 4;
  var rec = document.createElementNS(Util.svgns, "circle");
  rec.setAttributeNS(null, "cx", x*this.envBoxWidth + Math.round(Math.random()*this.envBoxWidth));
  rec.setAttributeNS(null, "r", size);
  var decFill = Math.round(Math.random()*10);
  rec.setAttributeNS(null, "fill", (decFill < 9 ) ? "black" : ((decFill == 9) ? "#080808" : "#111") ); // random decoration colors
  
  if (caveDecor < 2) {                        // temporary hack, should not be this.crashes, but works anyway...
    var ty = Math.round(Math.random()*y);
    if ((ty-size) <= this.caveTop) {
      ty = this.caveTop + size + 2;
      rec.setAttributeNS(null, "r", Math.ceil(size/2));
    } else if ((ty+size) >= y) {
      ty = y - size - 2;
      rec.setAttributeNS(null, "r", Math.ceil(size/2));
    }
    rec.setAttributeNS(null, "cy", ty);
    this.crashes.appendChild(rec);
  } else if (caveDecor > 8) {
    var bottom = this.tunnelMinSize + varHeight + y;
    var ty = bottom + Math.round(Math.random()*(this.caveBottom - bottom));
    if ((ty+size) >= this.caveBottom) {
      ty = this.caveBottom - size - 2;
      rec.setAttributeNS(null, "r", Math.ceil(size/2));
    } else if ((ty-size) <= bottom) {
      ty = bottom + size + 2;
      rec.setAttributeNS(null, "r", Math.ceil(size/2));
    }
    rec.setAttributeNS(null, "cy", ty);
    this.crashes.appendChild(rec);
  } else {
    // do nothing
  }
}

// cave movable/static object generation
Cave.prototype.generateObject = function (x, y, varHeight, oid) {
  var objType = (oid == null) ? Math.round(Math.random()*(ObjectTypes.length-2)) : oid;   //   -1  implicit, -2 = one boss, -3 = two bosses etc.
  var movable = (Math.random()>ObjectTypes[objType].moveThreshold); // variable chance of movable object
  var reversedCoef = (ObjectTypes[objType].reversed) ? -1 : 1;
  
  var initX = x*this.envBoxWidth;
  var initY = (ObjectTypes[objType].reversed) ? y : y-ObjectTypes[objType].height+this.tunnelMinSize+varHeight;
  initY -= reversedCoef * 2; // default correcture

  var rec = document.getElementById(ObjectTypes[objType].element).firstChild.cloneNode(true);
  rec.setAttributeNS(null, "objType", objType);
  rec.setAttributeNS(null, "transform", "translate("+initX+","+initY+")");
  if (ObjectTypes[objType].shieldPoints) {  // boss points special treatment
    rec.setAttributeNS(null, "shieldPoints", ObjectTypes[objType].shieldPoints+((Game.level-1)*10));
  }
  if (movable) { 
    var ani = document.createElementNS(Util.svgns, "animateTransform");
    ani.setAttributeNS(null, "attributeName", "transform");
    ani.setAttributeNS(null, "type", "translate");
    ani.setAttributeNS(null, "dur", "" + ObjectTypes[objType].speed + "s");
    ani.setAttributeNS(null, "repeatCount", "indefinite");
    if (ObjectTypes[objType].destroyable) {
      ani.setAttributeNS(null, "values", ""+initX+","+initY+";"+initX+","+(initY+(ObjectTypes[objType].height*reversedCoef)-((this.tunnelMinSize+varHeight)*reversedCoef))+";"+initX+","+initY);
    } else { // this is patch for WebKit case and Bolt, to move initial position from path...
      initY = initY+(ObjectTypes[objType].height*reversedCoef)-((this.tunnelMinSize+varHeight)*reversedCoef);
      rec.setAttributeNS(null, "transform", "translate("+initX+","+initY+")");
      ani.setAttributeNS(null, "values", ""+initX+","+initY+";"+initX+","+(initY-(ObjectTypes[objType].height*reversedCoef)+((this.tunnelMinSize+varHeight)*reversedCoef))+";"+initX+","+initY);
    }
    rec.appendChild(ani);
  } else {
  var ani = null;
}

  if (Game.showMarkerOnObjects) { // user friendly advisory option
    var marker = document.getElementById((ObjectTypes[objType].points>0)?"bonusMarker":"antiBonusMarker").cloneNode(true);
    if (ObjectTypes[objType].reversed) marker.setAttributeNS(null, "cy", 14);
    rec.appendChild(marker);
  }

  this.objects.appendChild(rec);
  Util.startAnimations(rec);
  this.objectsRefs.push(rec, null);
}

// remove object by given index
Cave.prototype.removeObjectByIndex = function (index) {
  Util.message("removingObject", index);
  Cave.objects.removeChild(this.objectsRefs[index]);
  this.objectsRefs[index] = null;
  Util.message("objectsCount", Cave.objects.childNodes.length);
}

// cave crash visuals
Cave.prototype.generateCrash = function (x, y, message, type, sound) {
  x += ViewPort.distance;
  var el = document.getElementById(type).firstChild.cloneNode(true);
  el.setAttributeNS(null, "transform", "translate("+x+","+y+")");
  el.firstChild.firstChild.data = "" + message;
  var ani = document.createElementNS(Util.svgns, "animateTransform");
  ani.setAttributeNS(null, "attributeName", "transform");
  ani.setAttributeNS(null, "type", "translate");
  ani.setAttributeNS(null, "dur", "1s");
  ani.setAttributeNS(null, "repeatCount", 1);
  ani.setAttributeNS(null, "values", ""+x+","+y+";"+(x-50)+","+(y-50));
  el.appendChild(ani);
  this.crashes.appendChild(el);
  Util.startAnimations(el);
  AudioMan.play(sound);
  window.setTimeout(function() {if (el) {Cave.crashes.removeChild(el)}}, 900);
}





/* ****************************************************************************
   ************* Viewport object, for computing current visual window *********
   ****************************************************************************
*/
function ViewPort () { // constructor
  this.windowWidth = 0;
  this.windowHeight = 0;
  this.scrollStep = 2;  // by how much pixels scroll
  this.distance = 0;  // distance, already scrolled out
  this.leftOffset = 0;  // whole visible area viewport left offset of cave pieces*2
  this.rightOffset = 0;  // whole visible area viewport right offset of cave pieces*2
  this.piecesInView = 0;
  this.leftOffsetToShip = 0;  // fighter/ship related possible colission cave pieces*2 from left
  this.rightOffsetToShip = 0;  // fighter/ship related possible colission cave pieces*2 from right
  this.timeShiftHolder = null;
}

// reset everything
ViewPort.prototype.reset = function () {
  this.distance = 0;
  this.leftOffset = 0;
  this.scrollStep = 2;
  this.rightOffset = 0;
  this.piecesInView = 0;
  this.leftOffsetToShip = 0;
  this.rightOffsetToShip = 0;
  if (this.timeShiftHolder) window.clearTimeout(this.timeShiftHolder);
  this.timeShiftHolder = null;
}

// acquiring actual window size
ViewPort.prototype.getWindowSize = function () {
   this.windowWidth = 480;
   this.windowHeight = 320;
   this.piecesInView = Math.ceil(this.windowWidth/Cave.envBoxWidth)*2;
}

// computing offset with which environment elements detect collisions to avoid unnecessary work/load/computing
ViewPort.prototype.computeOffset = function () {
  this.leftOffset = Math.floor(this.distance/Cave.envBoxWidth)*2; // how many pieces already scrolled out
  this.rightOffset = this.piecesInView + this.leftOffset; // how many compare
  if (this.rightOffset > Cave.realPiecesMax) this.rightOffset = Cave.realPiecesMax; // maximum

  this.leftOffsetToShip = Math.floor((this.distance+Fighter.BB.x)/Cave.envBoxWidth)*2;
  this.rightOffsetToShip = 2 + this.leftOffsetToShip + Math.ceil(Fighter.BB.width/Cave.envBoxWidth)*2;
  if (this.leftOffsetToShip >= (Cave.pieces - Cave.initialThreshold)) this.leftOffsetToShip = this.leftOffsetToShip - 2; // bosses corrections
  Util.message("ViewPort", "distance="+this.distance+ /*", leftOffset="+this.leftOffset+", rightOffset="+this.rightOffset+*/
                            ", leftOffsetToShip="+this.leftOffsetToShip+", rightOffsetToShip="+this.rightOffsetToShip);
}

// cave scrolling to the left
ViewPort.prototype.scroll = function () {
  this.distance += this.scrollStep;
  Cave.cave.setAttributeNS(null, "transform", "translate("+(-1*this.distance)+" 0)");
}

// starting positive or negative timeshift bonus
ViewPort.prototype.setTimeShift = function (negative) {
  if (negative) {
    this.scrollStep = 1;
    Cave.setCaveColor({c1:"#eee",c2:"#333"});
  } else {
    this.scrollStep = 3;
    Cave.setCaveColor({c1:"#333",c2:"#eee"});
  }
  if (this.timeShiftHolder) window.clearTimeout(this.timeShiftHolder);
  this.timeShiftHolder = window.setTimeout(function() {ViewPort.resetTimeShift();}, 6000);
}

// reset temporary timeshifting
ViewPort.prototype.resetTimeShift = function () {
  this.scrollStep = 2;
  Cave.setCaveColor(null);
  this.timeShiftHolder = null;
}






/* ****************************************************************************
   ************************** Fighter/ship object *****************************
   ****************************************************************************
*/
function Fighter () { // constructor
  this.dx = 0; // direction indicator for x axis
  this.dy = 0; // direction indicator for y axis
  this.baseLR = 0;  // deviceorientation intial values
  this.baseFB = 0;
  this.slowly = 1;
  this.setTilt = true;
  this.movementIndex = 4; // common movement index/speed in pixels  
  this.score = 0;
  this.shield = 300;
  this.shieldOrg = 0;
  this.forceShieldHolder = null; // timer holder for force shield
  this.fuel = 200;
  this.fighter = document.getElementById("fighter");
  this.fires = document.getElementById("fires");
  this.forceShield = document.getElementById("forceShieldDom");
  this.timer = null; // general timer for movement
  this.timerColl = null; // general timer for collisions
  var tmpBB = this.fighter.getBBox();
  this.BB = {x: tmpBB.x, y: tmpBB.y, width: tmpBB.width, height: tmpBB.height}; // store it for better performance
  this.states = {normal:"normal", crash:"crash", forward:"forward", backward:"backward"};
  this.state = "normal";
  this.missile = null; // missile element
  this.missileType = 1; // 1= missile, 2 = bomb
  this.missileTimer = null;
  this.ammo = 5; // ammunition counter
};

// accelerometer events during gameplay
Fighter.prototype.keyDown2 = function (evt) {
  var lr = Math.round(evt.beta);
  var fb = Math.round(evt.gamma);

  if (this.setTilt) {
    this.baseLR = lr;
    this.baseFB = fb;
    this.setTilt = false;
  }

  this.slowly = 1;

  if (lr > (this.baseLR+5)) {
    this.dx = -1; // left
    this.slowly = (lr < (this.baseLR+12)) ? 0.25 : 1;
  } else if (lr < (this.baseLR-5)) {
    this.dx = 1; // right
    this.slowly = (lr > (this.baseLR-12)) ? 0.25 : 1;
  } else this.dx = 0; // reset lr

  if (fb > (this.baseFB+5)) {
    this.dy = 1; // up
    this.slowly = (this.slowly == 1 && fb < (this.baseFB+12)) ? 0.5 : 1;
  } else if (fb < (this.baseFB-5)) {
    this.dy = -1; // down
    this.slowly = (this.slowly == 1 && fb > (this.baseFB-12)) ? 0.5 : 1;
  } else this.dy = 0; // reset fb
}

// mouse/tap/touch event
Fighter.prototype.clickDown = function (evt) {
    evt.preventDefault();
    if (Game.state == "running") this.fireMissile(0); 
    else if (Game.state == "menu") Game.levelStart(true);
    else if (Game.state == "level") Game.levelStart();
}

// swipe touch/bomb event
Fighter.prototype.clickHold = function (evt) {
    evt.preventDefault();
    if (Game.state == "running") this.fireMissile(1); 
}

// keyboard evaluation during gameplay
Fighter.prototype.keyDown = function (evt) {
  switch(evt.keyCode) {
    case 37: // left
    case 63234:
      this.dx = -1; break;
    case 39: // right
    case 63235:
      this.dx = 1; break;
    case 40: // down
    case 63233:
      this.dy = 1; break;
    case 38: // up
    case 63232:
      this.dy = -1; break;
    case 32: // fire space or (Z)
    case 89: // CS keyboard variant
    case 90: // EN keyboard variant
      evt.preventDefault();
      if (Game.state == "running") this.fireMissile(0); 
      else if (Game.state == "menu") Game.levelStart(true);
      else if (Game.state == "level") Game.levelStart();
      break;
    case 88: // bomb (X)
    case 66: // bomb (B)
      evt.preventDefault();
      if (Game.state == "running") this.fireMissile(1); break;
    case 27: // esc
      evt.preventDefault();
      if (Game.state == "running") Game.finish(true); 
      else Game.setModalScreen("menu");
      break;
    case 13: // enter
      evt.preventDefault();
      if (Game.state == "level") Game.levelStart();
      else if (Game.state == "menu") Game.levelStart(true);
      else if (Game.state == "end") {
        Game.setModalScreen("menu");
      }
      break;
  }
}

// keyboard evaluation during gameplay - reverse
Fighter.prototype.keyUp = function (evt) {
  switch(evt.keyCode) {
    case 37: // left
    case 63234:
    case 39: // right
    case 63235:
      this.dx = 0; break;
    case 40: // down
    case 63233:
    case 38: // up
    case 63232:
      this.dy = 0; break;
  }
}

// method throwing on/off fighter's event listeners
Fighter.prototype.setListeners = function (toOn) {
  if (toOn) {
    this.timer = window.setInterval("Fighter.moveShip()", 35);
    this.timerColl = window.setInterval("Fighter.detectCollisions()", 116);
  } else {
    window.clearTimeout(this.timer);
    window.clearTimeout(this.timerColl);
    this.removeMissile();
    this.timer = this.timerColl = null;
  }
}

// method reseting timers wholly/partially between levels
Fighter.prototype.reset = function (totalReset) {
  this.fuel = 200;
  this.slowly = 1;
  this.setTilt = true;
  this.resetForceShield();
  this.shield = 300;
  this.shieldOrg = 0;
  this.ammo += 5; // ammo just increase
  this.missile = null;
  this.dx = 0;
  this.dy = 0;
  if (totalReset) {
    this.score = 0;
    this.setVisualState("normal");
    this.ammo = 5;
  }
  this.removeMissile();
  this.setVisualState("normal");
  if (this.forceShieldHolder) window.clearTimeout(this.forceShieldHolder);
}

// starting force shield action
Fighter.prototype.setForceShield = function () {
  this.shieldOrg = this.shield;
  this.shield = 10000;
  this.forceShield.setAttributeNS(Util.xlinkns, "href", "#forceShieldVisual");
  if (this.forceShieldHolder) window.clearTimeout(this.forceShieldHolder);
  this.forceShieldHolder = window.setTimeout(function() {Fighter.resetForceShield();}, 4000);
}

// stopping force shieldaction
Fighter.prototype.resetForceShield = function () {
  this.shield = (this.shieldOrg) ? this.shieldOrg : 300;
  this.shieldOrg = 0;
  this.forceShieldHolder = null;
  this.forceShield.setAttributeNS(Util.xlinkns, "href", "#noForceShieldVisual");
}

// move fighter to given coordinates
Fighter.prototype.setShipToCoordinates = function (x, y) {
  this.BB.x = x;
  this.BB.y = y;
  this.fighter.setAttributeNS(null, "transform", "translate("+x+" "+y+")");
  this.fighter.setAttributeNS(null, "visibility", "visible");
}

// navigation of fighter through environment
Fighter.prototype.moveShip = function () {
  ViewPort.scroll();

  Util.message("directions", "dx="+this.dx+", dy="+this.dy + ", state=" + this.state);
  if (this.dx) {
    this.BB.x += (this.dx*this.movementIndex*this.slowly);
    if (this.BB.x > ViewPort.windowWidth-this.BB.width) this.BB.x = ViewPort.windowWidth-this.BB.width; // max correction
    if (this.BB.x < 0) this.BB.x = 0; // min correction
    this.fighter.setAttributeNS(null, "transform", "translate("+this.BB.x+" "+this.BB.y+")");
    this.setVisualState((this.dx==1) ? "forward" : "backward");
  } else {
    this.setVisualState("normal");
  }
  if (this.dy) { // dy
    this.BB.y += (this.dy*this.movementIndex*this.slowly);
    if (this.BB.y > Cave.caveBottom-this.BB.height) this.BB.y = Cave.caveBottom-this.BB.height; // max correction
    if (this.BB.y < 0) this.BB.y = 0; // min correction
    this.fighter.setAttributeNS(null, "transform", "translate("+this.BB.x+" "+this.BB.y+")");
  }
  Util.message("fighter", "x="+this.BB.x+", y="+this.BB.y);
  if ((this.shield < 1) || (this.fuel < 1)) Game.finish(false);
  if (ViewPort.rightOffsetToShip >= Cave.realPiecesMax) Game.levelStop();
}

// method to set current visual fighter's implementation
Fighter.prototype.setVisualState = function (state) {
  if (this.state == state) return; // it is necessary to do nothing
  this.state = state;
  if (state == "forward") AudioMan.play("a_thrust");
  this.fighter.lastChild.setAttributeNS(Util.xlinkns, "href", "#" + state);
}

// detection of collisions between fighter and the cave environment
Fighter.prototype.detectCollisions = function () {
  ViewPort.computeOffset();
  Game.showStats();

  // offsets are there to minimize the number of comparations
  for (var i=ViewPort.leftOffsetToShip; i < ViewPort.rightOffsetToShip; i++) {
    if (Cave.objectsRefs[i] && Util.isCollision(this.BB, Util.getComputedBBox(Cave.objectsRefs[i]))) {
      var collisionType = ObjectTypes[Cave.objectsRefs[i].getAttributeNS(null, "objType")];
      if (collisionType.points<0) this.setVisualState("crash");
      Util.message("collision", "with object " + collisionType.element + " affects " + collisionType.type);
      Cave.generateCrash(this.BB.x, this.BB.y, collisionType.type + ((collisionType.points>0)?" +":" ") + collisionType.points, (collisionType.points>0)?"crashPositive":"crashNegative", collisionType.contactSound);
      if (Game.supportsVibrate && collisionType.points<0) navigator.vibrate(150);
      Cave.removeObjectByIndex(i);
      Fighter[collisionType.type] += collisionType.points;
      if (collisionType.affectsTime) ViewPort.setTimeShift(0);  // start negative time scroll shift
      else if (collisionType.affectsForceShield) this.setForceShield();
      return true;
    }

    if ((i > 0) && Cave.environment.childNodes[i] && Util.isCollision(this.BB, Util.getComputedBBox(Cave.environment.childNodes[i]))) {
      this.setVisualState("crash");
      Cave.generateCrash(this.BB.x, this.BB.y, "shield -10" , "crashNegative", "a_crash3");
      if (Game.supportsVibrate) navigator.vibrate(150);
      Util.message("collision", "with cave");
      this.shield -= 10; // hard value
      return true;
    }
    
  }

  //this.setVisualState("normal");
  Util.message("collision", "none");
  return false;
}

// fire missile
Fighter.prototype.fireMissile = function (asBomb) {
  if (this.bomb || this.missile || !this.ammo) {
    AudioMan.play("a_nothing");
    return; // do nothing
  }
  if (asBomb) {
    var x = (this.BB.x + Math.floor(this.BB.width/2));
    var y = (this.BB.y + this.BB.height);
    this.missileType = 2;
    AudioMan.play("a_bomb");
  } else {
    var x = (this.BB.x + this.BB.width);
    var y = (this.BB.y + Math.floor(this.BB.height/2));
    this.missileType = 1;
    AudioMan.play("a_missile");
  }
  this.missile = document.createElementNS(Util.svgns, "rect");
  this.missile.setAttributeNS(null, "x", x);
  this.missile.setAttributeNS(null, "y", y);
  this.missile.setAttributeNS(null, "width", 4);
  this.missile.setAttributeNS(null, "height", 4);
  this.missile.setAttributeNS(null, "fill", "#dd3");
  this.fires.appendChild(this.missile);
  this.ammo--;
  this.missileTimer = window.setInterval( function() { Fighter.missileAnimate(); } , 26);
}

// missile animate
Fighter.prototype.missileAnimate = function () {
  if (this.missile) {
    var missBB = Util.getComputedBBox(this.missile);
    if (this.detectFireCollision(missBB)) return this.removeMissile(); // collision processed
    if (this.missileType == 2) { // bomb case
      this.missile.setAttributeNS(null, "y", (missBB.y+6));
      this.missile.setAttributeNS(null, "x", (missBB.x+1));
    } else {  // missile case
      this.missile.setAttributeNS(null, "x", (missBB.x+7));
    }
  } else {
    this.removeMissile();
  }
}

// remove missile from dom and delete references
Fighter.prototype.removeMissile = function () {
  if (this.missileTimer) {
    window.clearTimeout(this.missileTimer);
    this.missileTimer = null;
  }
  if (this.missile) {
    this.fires.removeChild(this.missile);
    this.missile = null;
  }
}

// detection of collision between fire and environment
Fighter.prototype.detectFireCollision = function (missBB) {
  var leftOffsetToMissile = Math.floor((ViewPort.distance+missBB.x)/Cave.envBoxWidth)*2;
  var addValue = 2;
  if (leftOffsetToMissile >= (Cave.pieces * 2)) {
    Fighter.removeMissile();
    return true;
  }
  if (leftOffsetToMissile >= (Cave.pieces - Cave.initialThreshold)) {  // bosses corrections
    leftOffsetToMissile = leftOffsetToMissile - 2;
    addValue = 4;
  }
  for (var i=leftOffsetToMissile; i < (leftOffsetToMissile+addValue); i++) {
    if (Cave.objectsRefs[i]) {
      if (Fighter.missile && Cave.objectsRefs[i] && Util.isCollision(missBB, Util.getComputedBBox(Cave.objectsRefs[i]))) {
        var objType = Cave.objectsRefs[i].getAttributeNS(null, "objType");
        Util.message("missileColl", objType);
        Fighter.removeMissile();
        if (ObjectTypes[objType] && ObjectTypes[objType].destroyable) {
          var normalProcess = true;
          if (ObjectTypes[objType].shieldPoints) {
            var lifePoints = 1 * Cave.objectsRefs[i].getAttributeNS(null, "shieldPoints");
            if ( (lifePoints - 10) > 0) {
              normalProcess = false;
              Cave.objectsRefs[i].setAttributeNS(null, "shieldPoints", (lifePoints - 10));
              Fighter.score += 10; // hiting boss for default value 10
              Cave.generateCrash(missBB.x, missBB.y, "points 10", "crashPositive", ObjectTypes[objType].shotSound);
            }
          }
          if (normalProcess) {
            if (ObjectTypes[objType].points < 0) { // enemy, always points up
              var hitPoints = 2 * Math.abs(ObjectTypes[objType].points);
              var tType = "score";
              var cType = "crashNegative";
              Fighter.score += hitPoints; // positive always
            } else { // positive object hit, add half points of the type
              var hitPoints = Math.ceil(0.5 * Math.abs(ObjectTypes[objType].points));
              var tType = ObjectTypes[objType].type;
              var cType = "crashPositive";
            }
            Fighter[tType] += hitPoints;
            Cave.removeObjectByIndex(i);
            Cave.generateCrash(missBB.x, missBB.y, "" + tType + " + " + hitPoints, cType, ObjectTypes[objType].shotSound);
            if (ObjectTypes[objType].affectsTime) ViewPort.setTimeShift(1);   // start positive time scroll shift
            else if (ObjectTypes[objType].affectsForceShield) this.setForceShield();
          }
        } else if (!ObjectTypes[objType].destroyable){
          AudioMan.play("a_nothing");
        }
        return true;
      }
    } else if (Cave.environment.childNodes[i] && Util.isCollision(missBB, Util.getComputedBBox(Cave.environment.childNodes[i]))) {
      Util.message("missileColl", "cave");
      AudioMan.play("a_nothing");
      Fighter.removeMissile();
      return true;
    } else {
      Util.message("missileColl", "nothing");
    }
  }
  return false;
}





/* ****************************************************************************
   **************************** Credits manager ******************************
   *****************************************************************************
*/
function CreditsManager () {}

// method for writing down player name
CreditsManager.prototype.writeDown = function() {
  var playerName = window.prompt("Out of " + ((Fighter.fuel <= 0) ? "fuel" : "shield") +", input your name:");
  if (playerName) CreditsManager.getHighScore(playerName);
}

// method invoking getting of high-score list
CreditsManager.prototype.getHighScore = function(playerName) {
  var hof = {"hof":[{"name":"Marek","score":"5000"},{"name":"Janca","score":"4000"},{"name":"Mnouk","score":"3000"},{"name":"Chessie","score":"2000"}]}
  if (localStorage) {
    if (localStorage.hallOfFame) {
      hof = JSON.parse(localStorage.hallOfFame);
    }
    if (playerName) {
      if (playerName.length > 14) playerName = playerName.substring(0, 15);
      hof.hof.push({"name":playerName,"score":Fighter.score});
    }
    localStorage.hallOfFame = JSON.stringify(hof);
  }
  this.showHighScore(hof.hof);
}

// method called from ajax, real parsing of acquired data and putting them show
CreditsManager.prototype.showHighScore = function(scores) {
  var fame = document.getElementById('hallOfFame');
  while (fame.hasChildNodes()) fame.removeChild(fame.firstChild);
  // resort score
  scores.sort(function (a, b) {
    if (1*a.score > 1*b.score)
      return -1;
    if (1*a.score < 1*b.score)
      return 1;
    // a must be equal to b
    return 0;
  });

  var topTen = (scores.length>8) ? 8 : scores.length;
  var total = 0;
  while (total < topTen) {
    var sc = scores.shift();
    // create text span
    var fameSpan = document.createElementNS(Util.svgns, "tspan");
    fameSpan.setAttributeNS(null, "x", 10); fameSpan.setAttributeNS(null, "dx", 0);
    fameSpan.setAttributeNS(null, "dy", 14); fameSpan.appendChild(document.createTextNode(sc.score));
    fame.appendChild(fameSpan);
    fameSpan = document.createElementNS(Util.svgns, "tspan");
    fameSpan.setAttributeNS(null, "x", 20); fameSpan.setAttributeNS(null, "dx", 40);
    fameSpan.setAttributeNS(null, "dy", 0); fameSpan.appendChild(document.createTextNode('................... '+ sc.name));
    fame.appendChild(fameSpan);
    total++;
  }
}



/* ****************************************************************************
   **************************** Audio manager *******************************
   *****************************************************************************
*/
function AudioMan () { // constructor
  this.enabled = 1; // flag, on/off whether sound is enabled
  this.embeds = new Array(); // references for faster acces to the page embedded sounds
  try {
    var test = new Audio();
    this.type = (test.canPlayType && test.canPlayType("audio/ogg")) ? ".ogg" : ".wav";
  } catch (e) {
    this.enabled = 0; // for browsers not supporting it yet
    this.type = "";
  }

  this.dirPrefix = "sounds/";
  this.audios = new Array();
  this.sounds = new Array();
  this.sounds["a_missile"] = "28917__junggle__btn107";
  this.sounds["a_enemy"] = "51464__smcameron__bombexplosion";
  this.sounds["a_bonus"] = "33244__ljudman__dingding";
  this.sounds["a_crash"] = "73005__Benboncan__Blast";
  this.sounds["a_alarm2"] = "39514__Syna_Max__alarm_of_d00m";
  this.sounds["a_alarm"] = "usr_shield_med";
  this.sounds["a_forceshield"] = "gravitation_segmental-min";
  this.sounds["a_bomb"] = "5382__Jovica__Attack_Zound_02";
  this.sounds["a_points"] = "bon_shield_min";
  this.sounds["a_positiveShot"] = "3380__patchen__Rhino_05";
  this.sounds["a_nothing"] = "4270__NoiseCollector__Chug";
  this.sounds["a_crash2"] = "30935__aust_paul__possiblelazer";
  this.sounds["a_positiveSound"] = "5211__fonogeno__drop02";
  this.sounds["a_level"] = "4269__NoiseCollector__Ghammer";
  this.sounds["a_crash3"] = "9628__NoiseCollector__PowerSnareVerb";
  this.sounds["a_crash4"] = "49513__Jon285__405Win";
  this.sounds["a_thrust"] = "5446__Jovica__Attack_Zound_69m";
  this.sounds["a_gong"] = "hero_available_2min";
  this.sounds["a_timeshift"] = "8611__hanstimm__tune606467712448";
  this.sounds["a_music"] = "anxmin";
  
  if (this.type == ".ogg") { // prepare tthem for faster access
    for (var i in this.sounds) this.embeds[i] = document.getElementById(i);
  }
}
  
// method for playing audio sound by given id
AudioMan.prototype.play = function (what, repeat) {
  if (!this.enabled || !this.type) return;
  if (this.type == ".ogg") {
    //if (!this.embeds[what]) alert(what);
    return this.embeds[what].play();
  }
  // Opera case
  var x = new Audio(this.dirPrefix + this.sounds[what] + this.type);
  if (repeat == true) {
    x.setAttribute("loop", "loop");
  }
  this.audios.push(x);
  x.play();
}

// reset method
AudioMan.prototype.reset = function () {
  for (var i in this.embeds) this.embeds[i].pause();

  for (var i in this.audios) {
    try {
        this.audios[i].pause();
    } catch (e) {
      try {
        this.audios[i].stop();  // try Opera
      } catch (e) {
        // do nothing
      }
    }
  }
  this.audios = new Array();
}

// prefetch all used sounds
AudioMan.prototype.prefetch = function () {
  if (this.type != ".wav") return;
  for (var snd in this.sounds) {
    var x = new Audio(this.dirPrefix + this.sounds[snd] + this.type);
    this.audios.push(x);
    x.volume = 0;
    x.mute = true;
    x.play();
  }
}

// switch sound support
AudioMan.prototype.switcher = function (elem) {
  if (!this.enabled) {
    this.enabled = 1;
    elem.setAttributeNS(null, "fill", "lightgreen");
  } else {
    this.enabled = 0;
    elem.setAttributeNS(null, "fill", "red");
  }
}






/* ****************************************************************************
   **************************** Configuration *********************************
   *****************************************************************************
   moveThreshold > 1 => always static, moveThreshold < 0 => always in motion
*/
ObjectTypes = new Array (
    {element:"fuel", type:"fuel", points: 120, destroyable:1, moveThreshold: .1, contactSound: "a_positiveSound", shotSound: "a_positiveShot", height: 20, speed: 4, reversed: 1},   // some fuel must be the first !! because of generating it regularly
    {element:"bomb", type:"shield", points: -20, destroyable:1, moveThreshold: .1, contactSound: "a_crash3", shotSound: "a_crash2", height: 20, speed: 3},
    {element:"shield", type:"shield", points: 20, destroyable:1, moveThreshold: .5, contactSound: "a_points", shotSound: "a_positiveShot", height: 20, speed: 4.5},
    {element:"bonus", type:"score", points: 50, destroyable:1, moveThreshold: .5, contactSound: "a_points", shotSound: "a_positiveShot", height: 20, speed: 5},
    {element:"bolt1", type:"shield", points: -30, destroyable:0, moveThreshold: -1, contactSound: "a_crash4", shotSound: "a_nothing", height: 20, speed: 4},
    {element:"bolt2", type:"shield", points: -30, destroyable:0, moveThreshold: -1, contactSound: "a_crash4", shotSound: "a_nothing", height: 20, speed: 3.4, reversed: 1},
    {element:"death", type:"shield", points: -40, destroyable:1, moveThreshold: -1, contactSound: "a_enemy", shotSound: "a_crash2", height: 20, speed: 3.5},
    {element:"ammo", type:"ammo", points: 6, destroyable:1, moveThreshold: .5, contactSound: "a_bonus", shotSound: "a_positiveShot", height: 20, speed: 5},
    {element:"coil", type:"shield", points: -30, destroyable:1, moveThreshold: 5, contactSound: "a_enemy", shotSound: "a_crash", height: 30, speed: 0},
    {element:"cistern", type:"fuel", points: 120, destroyable:1, moveThreshold: 5, contactSound: "a_positiveSound", shotSound: "a_positiveShot", height: 20, speed: 0},
    {element:"ufo", type:"shield", points: -30, destroyable:1, moveThreshold: -1, contactSound: "a_crash3", shotSound: "a_crash2", height: 20, speed: 2.5},
    {element:"hourglass", type:"score", points: 20, destroyable:1, moveThreshold: 5, contactSound: "a_timeshift", shotSound: "a_timeshift", reversed: 1, affectsTime: 1, height: 25, speed: 0},
    {element:"eye", type:"shield", points: -20, destroyable:1, moveThreshold: .6, contactSound: "a_crash3", shotSound: "a_crash2", reversed: 1, height: 20, speed: 3},
    {element:"icicle", type:"shield", points: -20, destroyable:1, moveThreshold: 5, contactSound: "a_crash", shotSound: "a_crash4", reversed: 1, height: 20, speed: 0},
    {element:"forceShield", type:"score", points: 1, destroyable:1, moveThreshold: -1, contactSound: "a_forceshield", shotSound: "a_forceshield", reversed: 1, height: 20, affectsForceShield: 1, speed: 3},

    // bosses should be the last ones, temporarily, and with known number
    {element:"boss", type:"shield", points: -80, destroyable:1, moveThreshold: -1, contactSound: "a_crash3", shotSound: "a_crash", shieldPoints: 20, height: 55, speed: 2.4}
                        );



/* ****************************************************************************
   **************************** Initialization *********************************
   ****************************************************************************
*/
// initialization
function init() {
  Util = new Util();
  Game = new Game();
  ViewPort = new ViewPort();
  Fighter = new Fighter();
  Cave = new Cave();
  ViewPort.getWindowSize();
  AudioMan = new AudioMan();
  CreditsManager = new CreditsManager();
  document.documentElement.addEventListener("keydown", function (evt) {Fighter.keyDown(evt);}, false);
  document.documentElement.addEventListener("keyup", function (evt) {Fighter.keyUp(evt);}, false);
  if (window.DeviceOrientationEvent) {
    window.addEventListener("deviceorientation", function (evt) {Fighter.keyDown2(evt);}, false);
  }
  if (Hammer.HAS_TOUCHEVENTS) {
    var el = document.getElementById("fireDisc");
    Hammer(el).on("tap", function (evt) {Fighter.clickDown(evt);});
    Hammer(el).on("hold", function (evt) {Fighter.clickHold(evt);});
  } else {
    document.getElementById("fireDisc").setAttribute("display", "none");
  }
  GameStartTime = new Date();
  window.resizeTo(920, 770);
  AudioMan.prefetch();
  Game.setModalScreen("menu");
}
init();

]]></svg:script>

</svg:svg>

</body>
</html>